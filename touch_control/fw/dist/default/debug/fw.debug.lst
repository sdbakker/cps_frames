

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 05 00:39:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF1559
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16LF1559 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  011D                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018E                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020D                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0391                     	;# 
   173  0392                     	;# 
   174  0393                     	;# 
   175  0394                     	;# 
   176  0395                     	;# 
   177  0396                     	;# 
   178  0611                     	;# 
   179  0612                     	;# 
   180  0613                     	;# 
   181  0613                     	;# 
   182  0614                     	;# 
   183  0615                     	;# 
   184  0616                     	;# 
   185  0616                     	;# 
   186  0711                     	;# 
   187  0711                     	;# 
   188  0711                     	;# 
   189  0712                     	;# 
   190  0712                     	;# 
   191  0713                     	;# 
   192  0713                     	;# 
   193  0713                     	;# 
   194  0714                     	;# 
   195  0714                     	;# 
   196  0714                     	;# 
   197  0715                     	;# 
   198  0715                     	;# 
   199  0716                     	;# 
   200  0716                     	;# 
   201  0716                     	;# 
   202  0716                     	;# 
   203  0717                     	;# 
   204  0717                     	;# 
   205  0717                     	;# 
   206  0717                     	;# 
   207  0718                     	;# 
   208  0718                     	;# 
   209  0718                     	;# 
   210  0719                     	;# 
   211  0719                     	;# 
   212  0719                     	;# 
   213  0719                     	;# 
   214  071A                     	;# 
   215  071A                     	;# 
   216  071A                     	;# 
   217  071A                     	;# 
   218  071A                     	;# 
   219  071B                     	;# 
   220  071B                     	;# 
   221  071C                     	;# 
   222  071C                     	;# 
   223  071C                     	;# 
   224  071C                     	;# 
   225  071C                     	;# 
   226  071D                     	;# 
   227  071D                     	;# 
   228  071E                     	;# 
   229  071E                     	;# 
   230  0791                     	;# 
   231  0791                     	;# 
   232  0793                     	;# 
   233  0793                     	;# 
   234  0794                     	;# 
   235  0794                     	;# 
   236  0796                     	;# 
   237  0796                     	;# 
   238  0796                     	;# 
   239  0797                     	;# 
   240  0797                     	;# 
   241  0797                     	;# 
   242  0798                     	;# 
   243  0798                     	;# 
   244  0799                     	;# 
   245  0799                     	;# 
   246  0799                     	;# 
   247  079A                     	;# 
   248  079A                     	;# 
   249  079A                     	;# 
   250  079B                     	;# 
   251  079C                     	;# 
   252  079C                     	;# 
   253  079C                     	;# 
   254  079D                     	;# 
   255  079E                     	;# 
   256  079E                     	;# 
   257  0F8C                     	;# 
   258  0F8D                     	;# 
   259  0F91                     	;# 
   260  0F96                     	;# 
   261  0F97                     	;# 
   262  0F9C                     	;# 
   263  0F9D                     	;# 
   264  0F9E                     	;# 
   265  0FE3                     	;# 
   266  0FE4                     	;# 
   267  0FE5                     	;# 
   268  0FE6                     	;# 
   269  0FE7                     	;# 
   270  0FE8                     	;# 
   271  0FE9                     	;# 
   272  0FEA                     	;# 
   273  0FEB                     	;# 
   274  0FED                     	;# 
   275  0FEE                     	;# 
   276  0FEF                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  0008                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0016                     	;# 
   297  0017                     	;# 
   298  0018                     	;# 
   299  0019                     	;# 
   300  001A                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0095                     	;# 
   309  0096                     	;# 
   310  0097                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  009F                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  0116                     	;# 
   323  0117                     	;# 
   324  011D                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  018E                     	;# 
   328  0191                     	;# 
   329  0191                     	;# 
   330  0192                     	;# 
   331  0193                     	;# 
   332  0193                     	;# 
   333  0194                     	;# 
   334  0195                     	;# 
   335  0196                     	;# 
   336  0199                     	;# 
   337  019A                     	;# 
   338  019B                     	;# 
   339  019B                     	;# 
   340  019C                     	;# 
   341  019D                     	;# 
   342  019E                     	;# 
   343  019F                     	;# 
   344  020C                     	;# 
   345  020D                     	;# 
   346  0211                     	;# 
   347  0211                     	;# 
   348  0212                     	;# 
   349  0212                     	;# 
   350  0213                     	;# 
   351  0213                     	;# 
   352  0214                     	;# 
   353  0214                     	;# 
   354  0215                     	;# 
   355  0215                     	;# 
   356  0215                     	;# 
   357  0216                     	;# 
   358  0216                     	;# 
   359  0217                     	;# 
   360  0217                     	;# 
   361  0391                     	;# 
   362  0392                     	;# 
   363  0393                     	;# 
   364  0394                     	;# 
   365  0395                     	;# 
   366  0396                     	;# 
   367  0611                     	;# 
   368  0612                     	;# 
   369  0613                     	;# 
   370  0613                     	;# 
   371  0614                     	;# 
   372  0615                     	;# 
   373  0616                     	;# 
   374  0616                     	;# 
   375  0711                     	;# 
   376  0711                     	;# 
   377  0711                     	;# 
   378  0712                     	;# 
   379  0712                     	;# 
   380  0713                     	;# 
   381  0713                     	;# 
   382  0713                     	;# 
   383  0714                     	;# 
   384  0714                     	;# 
   385  0714                     	;# 
   386  0715                     	;# 
   387  0715                     	;# 
   388  0716                     	;# 
   389  0716                     	;# 
   390  0716                     	;# 
   391  0716                     	;# 
   392  0717                     	;# 
   393  0717                     	;# 
   394  0717                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0718                     	;# 
   398  0718                     	;# 
   399  0719                     	;# 
   400  0719                     	;# 
   401  0719                     	;# 
   402  0719                     	;# 
   403  071A                     	;# 
   404  071A                     	;# 
   405  071A                     	;# 
   406  071A                     	;# 
   407  071A                     	;# 
   408  071B                     	;# 
   409  071B                     	;# 
   410  071C                     	;# 
   411  071C                     	;# 
   412  071C                     	;# 
   413  071C                     	;# 
   414  071C                     	;# 
   415  071D                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  071E                     	;# 
   419  0791                     	;# 
   420  0791                     	;# 
   421  0793                     	;# 
   422  0793                     	;# 
   423  0794                     	;# 
   424  0794                     	;# 
   425  0796                     	;# 
   426  0796                     	;# 
   427  0796                     	;# 
   428  0797                     	;# 
   429  0797                     	;# 
   430  0797                     	;# 
   431  0798                     	;# 
   432  0798                     	;# 
   433  0799                     	;# 
   434  0799                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  079A                     	;# 
   438  079A                     	;# 
   439  079B                     	;# 
   440  079C                     	;# 
   441  079C                     	;# 
   442  079C                     	;# 
   443  079D                     	;# 
   444  079E                     	;# 
   445  079E                     	;# 
   446  0F8C                     	;# 
   447  0F8D                     	;# 
   448  0F91                     	;# 
   449  0F96                     	;# 
   450  0F97                     	;# 
   451  0F9C                     	;# 
   452  0F9D                     	;# 
   453  0F9E                     	;# 
   454  0FE3                     	;# 
   455  0FE4                     	;# 
   456  0FE5                     	;# 
   457  0FE6                     	;# 
   458  0FE7                     	;# 
   459  0FE8                     	;# 
   460  0FE9                     	;# 
   461  0FEA                     	;# 
   462  0FEB                     	;# 
   463  0FED                     	;# 
   464  0FEE                     	;# 
   465  0FEF                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  0116                     	;# 
   512  0117                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0199                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019C                     	;# 
   530  019D                     	;# 
   531  019E                     	;# 
   532  019F                     	;# 
   533  020C                     	;# 
   534  020D                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0216                     	;# 
   547  0216                     	;# 
   548  0217                     	;# 
   549  0217                     	;# 
   550  0391                     	;# 
   551  0392                     	;# 
   552  0393                     	;# 
   553  0394                     	;# 
   554  0395                     	;# 
   555  0396                     	;# 
   556  0611                     	;# 
   557  0612                     	;# 
   558  0613                     	;# 
   559  0613                     	;# 
   560  0614                     	;# 
   561  0615                     	;# 
   562  0616                     	;# 
   563  0616                     	;# 
   564  0711                     	;# 
   565  0711                     	;# 
   566  0711                     	;# 
   567  0712                     	;# 
   568  0712                     	;# 
   569  0713                     	;# 
   570  0713                     	;# 
   571  0713                     	;# 
   572  0714                     	;# 
   573  0714                     	;# 
   574  0714                     	;# 
   575  0715                     	;# 
   576  0715                     	;# 
   577  0716                     	;# 
   578  0716                     	;# 
   579  0716                     	;# 
   580  0716                     	;# 
   581  0717                     	;# 
   582  0717                     	;# 
   583  0717                     	;# 
   584  0717                     	;# 
   585  0718                     	;# 
   586  0718                     	;# 
   587  0718                     	;# 
   588  0719                     	;# 
   589  0719                     	;# 
   590  0719                     	;# 
   591  0719                     	;# 
   592  071A                     	;# 
   593  071A                     	;# 
   594  071A                     	;# 
   595  071A                     	;# 
   596  071A                     	;# 
   597  071B                     	;# 
   598  071B                     	;# 
   599  071C                     	;# 
   600  071C                     	;# 
   601  071C                     	;# 
   602  071C                     	;# 
   603  071C                     	;# 
   604  071D                     	;# 
   605  071D                     	;# 
   606  071E                     	;# 
   607  071E                     	;# 
   608  0791                     	;# 
   609  0791                     	;# 
   610  0793                     	;# 
   611  0793                     	;# 
   612  0794                     	;# 
   613  0794                     	;# 
   614  0796                     	;# 
   615  0796                     	;# 
   616  0796                     	;# 
   617  0797                     	;# 
   618  0797                     	;# 
   619  0797                     	;# 
   620  0798                     	;# 
   621  0798                     	;# 
   622  0799                     	;# 
   623  0799                     	;# 
   624  0799                     	;# 
   625  079A                     	;# 
   626  079A                     	;# 
   627  079A                     	;# 
   628  079B                     	;# 
   629  079C                     	;# 
   630  079C                     	;# 
   631  079C                     	;# 
   632  079D                     	;# 
   633  079E                     	;# 
   634  079E                     	;# 
   635  0F8C                     	;# 
   636  0F8D                     	;# 
   637  0F91                     	;# 
   638  0F96                     	;# 
   639  0F97                     	;# 
   640  0F9C                     	;# 
   641  0F9D                     	;# 
   642  0F9E                     	;# 
   643  0FE3                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  000D                     	;# 
   669  000E                     	;# 
   670  0011                     	;# 
   671  0012                     	;# 
   672  0015                     	;# 
   673  0016                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001C                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009B                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  009F                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  0116                     	;# 
   701  0117                     	;# 
   702  011D                     	;# 
   703  018C                     	;# 
   704  018D                     	;# 
   705  018E                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0391                     	;# 
   740  0392                     	;# 
   741  0393                     	;# 
   742  0394                     	;# 
   743  0395                     	;# 
   744  0396                     	;# 
   745  0611                     	;# 
   746  0612                     	;# 
   747  0613                     	;# 
   748  0613                     	;# 
   749  0614                     	;# 
   750  0615                     	;# 
   751  0616                     	;# 
   752  0616                     	;# 
   753  0711                     	;# 
   754  0711                     	;# 
   755  0711                     	;# 
   756  0712                     	;# 
   757  0712                     	;# 
   758  0713                     	;# 
   759  0713                     	;# 
   760  0713                     	;# 
   761  0714                     	;# 
   762  0714                     	;# 
   763  0714                     	;# 
   764  0715                     	;# 
   765  0715                     	;# 
   766  0716                     	;# 
   767  0716                     	;# 
   768  0716                     	;# 
   769  0716                     	;# 
   770  0717                     	;# 
   771  0717                     	;# 
   772  0717                     	;# 
   773  0717                     	;# 
   774  0718                     	;# 
   775  0718                     	;# 
   776  0718                     	;# 
   777  0719                     	;# 
   778  0719                     	;# 
   779  0719                     	;# 
   780  0719                     	;# 
   781  071A                     	;# 
   782  071A                     	;# 
   783  071A                     	;# 
   784  071A                     	;# 
   785  071A                     	;# 
   786  071B                     	;# 
   787  071B                     	;# 
   788  071C                     	;# 
   789  071C                     	;# 
   790  071C                     	;# 
   791  071C                     	;# 
   792  071C                     	;# 
   793  071D                     	;# 
   794  071D                     	;# 
   795  071E                     	;# 
   796  071E                     	;# 
   797  0791                     	;# 
   798  0791                     	;# 
   799  0793                     	;# 
   800  0793                     	;# 
   801  0794                     	;# 
   802  0794                     	;# 
   803  0796                     	;# 
   804  0796                     	;# 
   805  0796                     	;# 
   806  0797                     	;# 
   807  0797                     	;# 
   808  0797                     	;# 
   809  0798                     	;# 
   810  0798                     	;# 
   811  0799                     	;# 
   812  0799                     	;# 
   813  0799                     	;# 
   814  079A                     	;# 
   815  079A                     	;# 
   816  079A                     	;# 
   817  079B                     	;# 
   818  079C                     	;# 
   819  079C                     	;# 
   820  079C                     	;# 
   821  079D                     	;# 
   822  079E                     	;# 
   823  079E                     	;# 
   824  0F8C                     	;# 
   825  0F8D                     	;# 
   826  0F91                     	;# 
   827  0F96                     	;# 
   828  0F97                     	;# 
   829  0F9C                     	;# 
   830  0F9D                     	;# 
   831  0F9E                     	;# 
   832  0FE3                     	;# 
   833  0FE4                     	;# 
   834  0FE5                     	;# 
   835  0FE6                     	;# 
   836  0FE7                     	;# 
   837  0FE8                     	;# 
   838  0FE9                     	;# 
   839  0FEA                     	;# 
   840  0FEB                     	;# 
   841  0FED                     	;# 
   842  0FEE                     	;# 
   843  0FEF                     	;# 
   844  0000                     	;# 
   845  0001                     	;# 
   846  0002                     	;# 
   847  0003                     	;# 
   848  0004                     	;# 
   849  0005                     	;# 
   850  0006                     	;# 
   851  0007                     	;# 
   852  0008                     	;# 
   853  0009                     	;# 
   854  000A                     	;# 
   855  000B                     	;# 
   856  000C                     	;# 
   857  000D                     	;# 
   858  000E                     	;# 
   859  0011                     	;# 
   860  0012                     	;# 
   861  0015                     	;# 
   862  0016                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001C                     	;# 
   870  008C                     	;# 
   871  008D                     	;# 
   872  008E                     	;# 
   873  0091                     	;# 
   874  0092                     	;# 
   875  0095                     	;# 
   876  0096                     	;# 
   877  0097                     	;# 
   878  0099                     	;# 
   879  009A                     	;# 
   880  009B                     	;# 
   881  009B                     	;# 
   882  009C                     	;# 
   883  009D                     	;# 
   884  009E                     	;# 
   885  009F                     	;# 
   886  010C                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  011D                     	;# 
   892  018C                     	;# 
   893  018D                     	;# 
   894  018E                     	;# 
   895  0191                     	;# 
   896  0191                     	;# 
   897  0192                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0194                     	;# 
   901  0195                     	;# 
   902  0196                     	;# 
   903  0199                     	;# 
   904  019A                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019C                     	;# 
   908  019D                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  020C                     	;# 
   912  020D                     	;# 
   913  0211                     	;# 
   914  0211                     	;# 
   915  0212                     	;# 
   916  0212                     	;# 
   917  0213                     	;# 
   918  0213                     	;# 
   919  0214                     	;# 
   920  0214                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0216                     	;# 
   925  0216                     	;# 
   926  0217                     	;# 
   927  0217                     	;# 
   928  0391                     	;# 
   929  0392                     	;# 
   930  0393                     	;# 
   931  0394                     	;# 
   932  0395                     	;# 
   933  0396                     	;# 
   934  0611                     	;# 
   935  0612                     	;# 
   936  0613                     	;# 
   937  0613                     	;# 
   938  0614                     	;# 
   939  0615                     	;# 
   940  0616                     	;# 
   941  0616                     	;# 
   942  0711                     	;# 
   943  0711                     	;# 
   944  0711                     	;# 
   945  0712                     	;# 
   946  0712                     	;# 
   947  0713                     	;# 
   948  0713                     	;# 
   949  0713                     	;# 
   950  0714                     	;# 
   951  0714                     	;# 
   952  0714                     	;# 
   953  0715                     	;# 
   954  0715                     	;# 
   955  0716                     	;# 
   956  0716                     	;# 
   957  0716                     	;# 
   958  0716                     	;# 
   959  0717                     	;# 
   960  0717                     	;# 
   961  0717                     	;# 
   962  0717                     	;# 
   963  0718                     	;# 
   964  0718                     	;# 
   965  0718                     	;# 
   966  0719                     	;# 
   967  0719                     	;# 
   968  0719                     	;# 
   969  0719                     	;# 
   970  071A                     	;# 
   971  071A                     	;# 
   972  071A                     	;# 
   973  071A                     	;# 
   974  071A                     	;# 
   975  071B                     	;# 
   976  071B                     	;# 
   977  071C                     	;# 
   978  071C                     	;# 
   979  071C                     	;# 
   980  071C                     	;# 
   981  071C                     	;# 
   982  071D                     	;# 
   983  071D                     	;# 
   984  071E                     	;# 
   985  071E                     	;# 
   986  0791                     	;# 
   987  0791                     	;# 
   988  0793                     	;# 
   989  0793                     	;# 
   990  0794                     	;# 
   991  0794                     	;# 
   992  0796                     	;# 
   993  0796                     	;# 
   994  0796                     	;# 
   995  0797                     	;# 
   996  0797                     	;# 
   997  0797                     	;# 
   998  0798                     	;# 
   999  0798                     	;# 
  1000  0799                     	;# 
  1001  0799                     	;# 
  1002  0799                     	;# 
  1003  079A                     	;# 
  1004  079A                     	;# 
  1005  079A                     	;# 
  1006  079B                     	;# 
  1007  079C                     	;# 
  1008  079C                     	;# 
  1009  079C                     	;# 
  1010  079D                     	;# 
  1011  079E                     	;# 
  1012  079E                     	;# 
  1013  0F8C                     	;# 
  1014  0F8D                     	;# 
  1015  0F91                     	;# 
  1016  0F96                     	;# 
  1017  0F97                     	;# 
  1018  0F9C                     	;# 
  1019  0F9D                     	;# 
  1020  0F9E                     	;# 
  1021  0FE3                     	;# 
  1022  0FE4                     	;# 
  1023  0FE5                     	;# 
  1024  0FE6                     	;# 
  1025  0FE7                     	;# 
  1026  0FE8                     	;# 
  1027  0FE9                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000D                     	;# 
  1047  000E                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0015                     	;# 
  1051  0016                     	;# 
  1052  0016                     	;# 
  1053  0017                     	;# 
  1054  0018                     	;# 
  1055  0019                     	;# 
  1056  001A                     	;# 
  1057  001B                     	;# 
  1058  001C                     	;# 
  1059  008C                     	;# 
  1060  008D                     	;# 
  1061  008E                     	;# 
  1062  0091                     	;# 
  1063  0092                     	;# 
  1064  0095                     	;# 
  1065  0096                     	;# 
  1066  0097                     	;# 
  1067  0099                     	;# 
  1068  009A                     	;# 
  1069  009B                     	;# 
  1070  009B                     	;# 
  1071  009C                     	;# 
  1072  009D                     	;# 
  1073  009E                     	;# 
  1074  009F                     	;# 
  1075  010C                     	;# 
  1076  010D                     	;# 
  1077  010E                     	;# 
  1078  0116                     	;# 
  1079  0117                     	;# 
  1080  011D                     	;# 
  1081  018C                     	;# 
  1082  018D                     	;# 
  1083  018E                     	;# 
  1084  0191                     	;# 
  1085  0191                     	;# 
  1086  0192                     	;# 
  1087  0193                     	;# 
  1088  0193                     	;# 
  1089  0194                     	;# 
  1090  0195                     	;# 
  1091  0196                     	;# 
  1092  0199                     	;# 
  1093  019A                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019C                     	;# 
  1097  019D                     	;# 
  1098  019E                     	;# 
  1099  019F                     	;# 
  1100  020C                     	;# 
  1101  020D                     	;# 
  1102  0211                     	;# 
  1103  0211                     	;# 
  1104  0212                     	;# 
  1105  0212                     	;# 
  1106  0213                     	;# 
  1107  0213                     	;# 
  1108  0214                     	;# 
  1109  0214                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0216                     	;# 
  1114  0216                     	;# 
  1115  0217                     	;# 
  1116  0217                     	;# 
  1117  0391                     	;# 
  1118  0392                     	;# 
  1119  0393                     	;# 
  1120  0394                     	;# 
  1121  0395                     	;# 
  1122  0396                     	;# 
  1123  0611                     	;# 
  1124  0612                     	;# 
  1125  0613                     	;# 
  1126  0613                     	;# 
  1127  0614                     	;# 
  1128  0615                     	;# 
  1129  0616                     	;# 
  1130  0616                     	;# 
  1131  0711                     	;# 
  1132  0711                     	;# 
  1133  0711                     	;# 
  1134  0712                     	;# 
  1135  0712                     	;# 
  1136  0713                     	;# 
  1137  0713                     	;# 
  1138  0713                     	;# 
  1139  0714                     	;# 
  1140  0714                     	;# 
  1141  0714                     	;# 
  1142  0715                     	;# 
  1143  0715                     	;# 
  1144  0716                     	;# 
  1145  0716                     	;# 
  1146  0716                     	;# 
  1147  0716                     	;# 
  1148  0717                     	;# 
  1149  0717                     	;# 
  1150  0717                     	;# 
  1151  0717                     	;# 
  1152  0718                     	;# 
  1153  0718                     	;# 
  1154  0718                     	;# 
  1155  0719                     	;# 
  1156  0719                     	;# 
  1157  0719                     	;# 
  1158  0719                     	;# 
  1159  071A                     	;# 
  1160  071A                     	;# 
  1161  071A                     	;# 
  1162  071A                     	;# 
  1163  071A                     	;# 
  1164  071B                     	;# 
  1165  071B                     	;# 
  1166  071C                     	;# 
  1167  071C                     	;# 
  1168  071C                     	;# 
  1169  071C                     	;# 
  1170  071C                     	;# 
  1171  071D                     	;# 
  1172  071D                     	;# 
  1173  071E                     	;# 
  1174  071E                     	;# 
  1175  0791                     	;# 
  1176  0791                     	;# 
  1177  0793                     	;# 
  1178  0793                     	;# 
  1179  0794                     	;# 
  1180  0794                     	;# 
  1181  0796                     	;# 
  1182  0796                     	;# 
  1183  0796                     	;# 
  1184  0797                     	;# 
  1185  0797                     	;# 
  1186  0797                     	;# 
  1187  0798                     	;# 
  1188  0798                     	;# 
  1189  0799                     	;# 
  1190  0799                     	;# 
  1191  0799                     	;# 
  1192  079A                     	;# 
  1193  079A                     	;# 
  1194  079A                     	;# 
  1195  079B                     	;# 
  1196  079C                     	;# 
  1197  079C                     	;# 
  1198  079C                     	;# 
  1199  079D                     	;# 
  1200  079E                     	;# 
  1201  079E                     	;# 
  1202  0F8C                     	;# 
  1203  0F8D                     	;# 
  1204  0F91                     	;# 
  1205  0F96                     	;# 
  1206  0F97                     	;# 
  1207  0F9C                     	;# 
  1208  0F9D                     	;# 
  1209  0F9E                     	;# 
  1210  0FE3                     	;# 
  1211  0FE4                     	;# 
  1212  0FE5                     	;# 
  1213  0FE6                     	;# 
  1214  0FE7                     	;# 
  1215  0FE8                     	;# 
  1216  0FE9                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  0011                     	;# 
  1238  0012                     	;# 
  1239  0015                     	;# 
  1240  0016                     	;# 
  1241  0016                     	;# 
  1242  0017                     	;# 
  1243  0018                     	;# 
  1244  0019                     	;# 
  1245  001A                     	;# 
  1246  001B                     	;# 
  1247  001C                     	;# 
  1248  008C                     	;# 
  1249  008D                     	;# 
  1250  008E                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0095                     	;# 
  1254  0096                     	;# 
  1255  0097                     	;# 
  1256  0099                     	;# 
  1257  009A                     	;# 
  1258  009B                     	;# 
  1259  009B                     	;# 
  1260  009C                     	;# 
  1261  009D                     	;# 
  1262  009E                     	;# 
  1263  009F                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  010E                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  011D                     	;# 
  1270  018C                     	;# 
  1271  018D                     	;# 
  1272  018E                     	;# 
  1273  0191                     	;# 
  1274  0191                     	;# 
  1275  0192                     	;# 
  1276  0193                     	;# 
  1277  0193                     	;# 
  1278  0194                     	;# 
  1279  0195                     	;# 
  1280  0196                     	;# 
  1281  0199                     	;# 
  1282  019A                     	;# 
  1283  019B                     	;# 
  1284  019B                     	;# 
  1285  019C                     	;# 
  1286  019D                     	;# 
  1287  019E                     	;# 
  1288  019F                     	;# 
  1289  020C                     	;# 
  1290  020D                     	;# 
  1291  0211                     	;# 
  1292  0211                     	;# 
  1293  0212                     	;# 
  1294  0212                     	;# 
  1295  0213                     	;# 
  1296  0213                     	;# 
  1297  0214                     	;# 
  1298  0214                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0216                     	;# 
  1303  0216                     	;# 
  1304  0217                     	;# 
  1305  0217                     	;# 
  1306  0391                     	;# 
  1307  0392                     	;# 
  1308  0393                     	;# 
  1309  0394                     	;# 
  1310  0395                     	;# 
  1311  0396                     	;# 
  1312  0611                     	;# 
  1313  0612                     	;# 
  1314  0613                     	;# 
  1315  0613                     	;# 
  1316  0614                     	;# 
  1317  0615                     	;# 
  1318  0616                     	;# 
  1319  0616                     	;# 
  1320  0711                     	;# 
  1321  0711                     	;# 
  1322  0711                     	;# 
  1323  0712                     	;# 
  1324  0712                     	;# 
  1325  0713                     	;# 
  1326  0713                     	;# 
  1327  0713                     	;# 
  1328  0714                     	;# 
  1329  0714                     	;# 
  1330  0714                     	;# 
  1331  0715                     	;# 
  1332  0715                     	;# 
  1333  0716                     	;# 
  1334  0716                     	;# 
  1335  0716                     	;# 
  1336  0716                     	;# 
  1337  0717                     	;# 
  1338  0717                     	;# 
  1339  0717                     	;# 
  1340  0717                     	;# 
  1341  0718                     	;# 
  1342  0718                     	;# 
  1343  0718                     	;# 
  1344  0719                     	;# 
  1345  0719                     	;# 
  1346  0719                     	;# 
  1347  0719                     	;# 
  1348  071A                     	;# 
  1349  071A                     	;# 
  1350  071A                     	;# 
  1351  071A                     	;# 
  1352  071A                     	;# 
  1353  071B                     	;# 
  1354  071B                     	;# 
  1355  071C                     	;# 
  1356  071C                     	;# 
  1357  071C                     	;# 
  1358  071C                     	;# 
  1359  071C                     	;# 
  1360  071D                     	;# 
  1361  071D                     	;# 
  1362  071E                     	;# 
  1363  071E                     	;# 
  1364  0791                     	;# 
  1365  0791                     	;# 
  1366  0793                     	;# 
  1367  0793                     	;# 
  1368  0794                     	;# 
  1369  0794                     	;# 
  1370  0796                     	;# 
  1371  0796                     	;# 
  1372  0796                     	;# 
  1373  0797                     	;# 
  1374  0797                     	;# 
  1375  0797                     	;# 
  1376  0798                     	;# 
  1377  0798                     	;# 
  1378  0799                     	;# 
  1379  0799                     	;# 
  1380  0799                     	;# 
  1381  079A                     	;# 
  1382  079A                     	;# 
  1383  079A                     	;# 
  1384  079B                     	;# 
  1385  079C                     	;# 
  1386  079C                     	;# 
  1387  079C                     	;# 
  1388  079D                     	;# 
  1389  079E                     	;# 
  1390  079E                     	;# 
  1391  0F8C                     	;# 
  1392  0F8D                     	;# 
  1393  0F91                     	;# 
  1394  0F96                     	;# 
  1395  0F97                     	;# 
  1396  0F9C                     	;# 
  1397  0F9D                     	;# 
  1398  0F9E                     	;# 
  1399  0FE3                     	;# 
  1400  0FE4                     	;# 
  1401  0FE5                     	;# 
  1402  0FE6                     	;# 
  1403  0FE7                     	;# 
  1404  0FE8                     	;# 
  1405  0FE9                     	;# 
  1406  0FEA                     	;# 
  1407  0FEB                     	;# 
  1408  0FED                     	;# 
  1409  0FEE                     	;# 
  1410  0FEF                     	;# 
  1411  0000                     	;# 
  1412  0001                     	;# 
  1413  0002                     	;# 
  1414  0003                     	;# 
  1415  0004                     	;# 
  1416  0005                     	;# 
  1417  0006                     	;# 
  1418  0007                     	;# 
  1419  0008                     	;# 
  1420  0009                     	;# 
  1421  000A                     	;# 
  1422  000B                     	;# 
  1423  000C                     	;# 
  1424  000D                     	;# 
  1425  000E                     	;# 
  1426  0011                     	;# 
  1427  0012                     	;# 
  1428  0015                     	;# 
  1429  0016                     	;# 
  1430  0016                     	;# 
  1431  0017                     	;# 
  1432  0018                     	;# 
  1433  0019                     	;# 
  1434  001A                     	;# 
  1435  001B                     	;# 
  1436  001C                     	;# 
  1437  008C                     	;# 
  1438  008D                     	;# 
  1439  008E                     	;# 
  1440  0091                     	;# 
  1441  0092                     	;# 
  1442  0095                     	;# 
  1443  0096                     	;# 
  1444  0097                     	;# 
  1445  0099                     	;# 
  1446  009A                     	;# 
  1447  009B                     	;# 
  1448  009B                     	;# 
  1449  009C                     	;# 
  1450  009D                     	;# 
  1451  009E                     	;# 
  1452  009F                     	;# 
  1453  010C                     	;# 
  1454  010D                     	;# 
  1455  010E                     	;# 
  1456  0116                     	;# 
  1457  0117                     	;# 
  1458  011D                     	;# 
  1459  018C                     	;# 
  1460  018D                     	;# 
  1461  018E                     	;# 
  1462  0191                     	;# 
  1463  0191                     	;# 
  1464  0192                     	;# 
  1465  0193                     	;# 
  1466  0193                     	;# 
  1467  0194                     	;# 
  1468  0195                     	;# 
  1469  0196                     	;# 
  1470  0199                     	;# 
  1471  019A                     	;# 
  1472  019B                     	;# 
  1473  019B                     	;# 
  1474  019C                     	;# 
  1475  019D                     	;# 
  1476  019E                     	;# 
  1477  019F                     	;# 
  1478  020C                     	;# 
  1479  020D                     	;# 
  1480  0211                     	;# 
  1481  0211                     	;# 
  1482  0212                     	;# 
  1483  0212                     	;# 
  1484  0213                     	;# 
  1485  0213                     	;# 
  1486  0214                     	;# 
  1487  0214                     	;# 
  1488  0215                     	;# 
  1489  0215                     	;# 
  1490  0215                     	;# 
  1491  0216                     	;# 
  1492  0216                     	;# 
  1493  0217                     	;# 
  1494  0217                     	;# 
  1495  0391                     	;# 
  1496  0392                     	;# 
  1497  0393                     	;# 
  1498  0394                     	;# 
  1499  0395                     	;# 
  1500  0396                     	;# 
  1501  0611                     	;# 
  1502  0612                     	;# 
  1503  0613                     	;# 
  1504  0613                     	;# 
  1505  0614                     	;# 
  1506  0615                     	;# 
  1507  0616                     	;# 
  1508  0616                     	;# 
  1509  0711                     	;# 
  1510  0711                     	;# 
  1511  0711                     	;# 
  1512  0712                     	;# 
  1513  0712                     	;# 
  1514  0713                     	;# 
  1515  0713                     	;# 
  1516  0713                     	;# 
  1517  0714                     	;# 
  1518  0714                     	;# 
  1519  0714                     	;# 
  1520  0715                     	;# 
  1521  0715                     	;# 
  1522  0716                     	;# 
  1523  0716                     	;# 
  1524  0716                     	;# 
  1525  0716                     	;# 
  1526  0717                     	;# 
  1527  0717                     	;# 
  1528  0717                     	;# 
  1529  0717                     	;# 
  1530  0718                     	;# 
  1531  0718                     	;# 
  1532  0718                     	;# 
  1533  0719                     	;# 
  1534  0719                     	;# 
  1535  0719                     	;# 
  1536  0719                     	;# 
  1537  071A                     	;# 
  1538  071A                     	;# 
  1539  071A                     	;# 
  1540  071A                     	;# 
  1541  071A                     	;# 
  1542  071B                     	;# 
  1543  071B                     	;# 
  1544  071C                     	;# 
  1545  071C                     	;# 
  1546  071C                     	;# 
  1547  071C                     	;# 
  1548  071C                     	;# 
  1549  071D                     	;# 
  1550  071D                     	;# 
  1551  071E                     	;# 
  1552  071E                     	;# 
  1553  0791                     	;# 
  1554  0791                     	;# 
  1555  0793                     	;# 
  1556  0793                     	;# 
  1557  0794                     	;# 
  1558  0794                     	;# 
  1559  0796                     	;# 
  1560  0796                     	;# 
  1561  0796                     	;# 
  1562  0797                     	;# 
  1563  0797                     	;# 
  1564  0797                     	;# 
  1565  0798                     	;# 
  1566  0798                     	;# 
  1567  0799                     	;# 
  1568  0799                     	;# 
  1569  0799                     	;# 
  1570  079A                     	;# 
  1571  079A                     	;# 
  1572  079A                     	;# 
  1573  079B                     	;# 
  1574  079C                     	;# 
  1575  079C                     	;# 
  1576  079C                     	;# 
  1577  079D                     	;# 
  1578  079E                     	;# 
  1579  079E                     	;# 
  1580  0F8C                     	;# 
  1581  0F8D                     	;# 
  1582  0F91                     	;# 
  1583  0F96                     	;# 
  1584  0F97                     	;# 
  1585  0F9C                     	;# 
  1586  0F9D                     	;# 
  1587  0F9E                     	;# 
  1588  0FE3                     	;# 
  1589  0FE4                     	;# 
  1590  0FE5                     	;# 
  1591  0FE6                     	;# 
  1592  0FE7                     	;# 
  1593  0FE8                     	;# 
  1594  0FE9                     	;# 
  1595  0FEA                     	;# 
  1596  0FEB                     	;# 
  1597  0FED                     	;# 
  1598  0FEE                     	;# 
  1599  0FEF                     	;# 
  1600  0000                     	;# 
  1601  0001                     	;# 
  1602  0002                     	;# 
  1603  0003                     	;# 
  1604  0004                     	;# 
  1605  0005                     	;# 
  1606  0006                     	;# 
  1607  0007                     	;# 
  1608  0008                     	;# 
  1609  0009                     	;# 
  1610  000A                     	;# 
  1611  000B                     	;# 
  1612  000C                     	;# 
  1613  000D                     	;# 
  1614  000E                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0015                     	;# 
  1618  0016                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  0019                     	;# 
  1623  001A                     	;# 
  1624  001B                     	;# 
  1625  001C                     	;# 
  1626  008C                     	;# 
  1627  008D                     	;# 
  1628  008E                     	;# 
  1629  0091                     	;# 
  1630  0092                     	;# 
  1631  0095                     	;# 
  1632  0096                     	;# 
  1633  0097                     	;# 
  1634  0099                     	;# 
  1635  009A                     	;# 
  1636  009B                     	;# 
  1637  009B                     	;# 
  1638  009C                     	;# 
  1639  009D                     	;# 
  1640  009E                     	;# 
  1641  009F                     	;# 
  1642  010C                     	;# 
  1643  010D                     	;# 
  1644  010E                     	;# 
  1645  0116                     	;# 
  1646  0117                     	;# 
  1647  011D                     	;# 
  1648  018C                     	;# 
  1649  018D                     	;# 
  1650  018E                     	;# 
  1651  0191                     	;# 
  1652  0191                     	;# 
  1653  0192                     	;# 
  1654  0193                     	;# 
  1655  0193                     	;# 
  1656  0194                     	;# 
  1657  0195                     	;# 
  1658  0196                     	;# 
  1659  0199                     	;# 
  1660  019A                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  019D                     	;# 
  1665  019E                     	;# 
  1666  019F                     	;# 
  1667  020C                     	;# 
  1668  020D                     	;# 
  1669  0211                     	;# 
  1670  0211                     	;# 
  1671  0212                     	;# 
  1672  0212                     	;# 
  1673  0213                     	;# 
  1674  0213                     	;# 
  1675  0214                     	;# 
  1676  0214                     	;# 
  1677  0215                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0216                     	;# 
  1681  0216                     	;# 
  1682  0217                     	;# 
  1683  0217                     	;# 
  1684  0391                     	;# 
  1685  0392                     	;# 
  1686  0393                     	;# 
  1687  0394                     	;# 
  1688  0395                     	;# 
  1689  0396                     	;# 
  1690  0611                     	;# 
  1691  0612                     	;# 
  1692  0613                     	;# 
  1693  0613                     	;# 
  1694  0614                     	;# 
  1695  0615                     	;# 
  1696  0616                     	;# 
  1697  0616                     	;# 
  1698  0711                     	;# 
  1699  0711                     	;# 
  1700  0711                     	;# 
  1701  0712                     	;# 
  1702  0712                     	;# 
  1703  0713                     	;# 
  1704  0713                     	;# 
  1705  0713                     	;# 
  1706  0714                     	;# 
  1707  0714                     	;# 
  1708  0714                     	;# 
  1709  0715                     	;# 
  1710  0715                     	;# 
  1711  0716                     	;# 
  1712  0716                     	;# 
  1713  0716                     	;# 
  1714  0716                     	;# 
  1715  0717                     	;# 
  1716  0717                     	;# 
  1717  0717                     	;# 
  1718  0717                     	;# 
  1719  0718                     	;# 
  1720  0718                     	;# 
  1721  0718                     	;# 
  1722  0719                     	;# 
  1723  0719                     	;# 
  1724  0719                     	;# 
  1725  0719                     	;# 
  1726  071A                     	;# 
  1727  071A                     	;# 
  1728  071A                     	;# 
  1729  071A                     	;# 
  1730  071A                     	;# 
  1731  071B                     	;# 
  1732  071B                     	;# 
  1733  071C                     	;# 
  1734  071C                     	;# 
  1735  071C                     	;# 
  1736  071C                     	;# 
  1737  071C                     	;# 
  1738  071D                     	;# 
  1739  071D                     	;# 
  1740  071E                     	;# 
  1741  071E                     	;# 
  1742  0791                     	;# 
  1743  0791                     	;# 
  1744  0793                     	;# 
  1745  0793                     	;# 
  1746  0794                     	;# 
  1747  0794                     	;# 
  1748  0796                     	;# 
  1749  0796                     	;# 
  1750  0796                     	;# 
  1751  0797                     	;# 
  1752  0797                     	;# 
  1753  0797                     	;# 
  1754  0798                     	;# 
  1755  0798                     	;# 
  1756  0799                     	;# 
  1757  0799                     	;# 
  1758  0799                     	;# 
  1759  079A                     	;# 
  1760  079A                     	;# 
  1761  079A                     	;# 
  1762  079B                     	;# 
  1763  079C                     	;# 
  1764  079C                     	;# 
  1765  079C                     	;# 
  1766  079D                     	;# 
  1767  079E                     	;# 
  1768  079E                     	;# 
  1769  0F8C                     	;# 
  1770  0F8D                     	;# 
  1771  0F91                     	;# 
  1772  0F96                     	;# 
  1773  0F97                     	;# 
  1774  0F9C                     	;# 
  1775  0F9D                     	;# 
  1776  0F9E                     	;# 
  1777  0FE3                     	;# 
  1778  0FE4                     	;# 
  1779  0FE5                     	;# 
  1780  0FE6                     	;# 
  1781  0FE7                     	;# 
  1782  0FE8                     	;# 
  1783  0FE9                     	;# 
  1784  0FEA                     	;# 
  1785  0FEB                     	;# 
  1786  0FED                     	;# 
  1787  0FEE                     	;# 
  1788  0FEF                     	;# 
  1789  0000                     	;# 
  1790  0001                     	;# 
  1791  0002                     	;# 
  1792  0003                     	;# 
  1793  0004                     	;# 
  1794  0005                     	;# 
  1795  0006                     	;# 
  1796  0007                     	;# 
  1797  0008                     	;# 
  1798  0009                     	;# 
  1799  000A                     	;# 
  1800  000B                     	;# 
  1801  000C                     	;# 
  1802  000D                     	;# 
  1803  000E                     	;# 
  1804  0011                     	;# 
  1805  0012                     	;# 
  1806  0015                     	;# 
  1807  0016                     	;# 
  1808  0016                     	;# 
  1809  0017                     	;# 
  1810  0018                     	;# 
  1811  0019                     	;# 
  1812  001A                     	;# 
  1813  001B                     	;# 
  1814  001C                     	;# 
  1815  008C                     	;# 
  1816  008D                     	;# 
  1817  008E                     	;# 
  1818  0091                     	;# 
  1819  0092                     	;# 
  1820  0095                     	;# 
  1821  0096                     	;# 
  1822  0097                     	;# 
  1823  0099                     	;# 
  1824  009A                     	;# 
  1825  009B                     	;# 
  1826  009B                     	;# 
  1827  009C                     	;# 
  1828  009D                     	;# 
  1829  009E                     	;# 
  1830  009F                     	;# 
  1831  010C                     	;# 
  1832  010D                     	;# 
  1833  010E                     	;# 
  1834  0116                     	;# 
  1835  0117                     	;# 
  1836  011D                     	;# 
  1837  018C                     	;# 
  1838  018D                     	;# 
  1839  018E                     	;# 
  1840  0191                     	;# 
  1841  0191                     	;# 
  1842  0192                     	;# 
  1843  0193                     	;# 
  1844  0193                     	;# 
  1845  0194                     	;# 
  1846  0195                     	;# 
  1847  0196                     	;# 
  1848  0199                     	;# 
  1849  019A                     	;# 
  1850  019B                     	;# 
  1851  019B                     	;# 
  1852  019C                     	;# 
  1853  019D                     	;# 
  1854  019E                     	;# 
  1855  019F                     	;# 
  1856  020C                     	;# 
  1857  020D                     	;# 
  1858  0211                     	;# 
  1859  0211                     	;# 
  1860  0212                     	;# 
  1861  0212                     	;# 
  1862  0213                     	;# 
  1863  0213                     	;# 
  1864  0214                     	;# 
  1865  0214                     	;# 
  1866  0215                     	;# 
  1867  0215                     	;# 
  1868  0215                     	;# 
  1869  0216                     	;# 
  1870  0216                     	;# 
  1871  0217                     	;# 
  1872  0217                     	;# 
  1873  0391                     	;# 
  1874  0392                     	;# 
  1875  0393                     	;# 
  1876  0394                     	;# 
  1877  0395                     	;# 
  1878  0396                     	;# 
  1879  0611                     	;# 
  1880  0612                     	;# 
  1881  0613                     	;# 
  1882  0613                     	;# 
  1883  0614                     	;# 
  1884  0615                     	;# 
  1885  0616                     	;# 
  1886  0616                     	;# 
  1887  0711                     	;# 
  1888  0711                     	;# 
  1889  0711                     	;# 
  1890  0712                     	;# 
  1891  0712                     	;# 
  1892  0713                     	;# 
  1893  0713                     	;# 
  1894  0713                     	;# 
  1895  0714                     	;# 
  1896  0714                     	;# 
  1897  0714                     	;# 
  1898  0715                     	;# 
  1899  0715                     	;# 
  1900  0716                     	;# 
  1901  0716                     	;# 
  1902  0716                     	;# 
  1903  0716                     	;# 
  1904  0717                     	;# 
  1905  0717                     	;# 
  1906  0717                     	;# 
  1907  0717                     	;# 
  1908  0718                     	;# 
  1909  0718                     	;# 
  1910  0718                     	;# 
  1911  0719                     	;# 
  1912  0719                     	;# 
  1913  0719                     	;# 
  1914  0719                     	;# 
  1915  071A                     	;# 
  1916  071A                     	;# 
  1917  071A                     	;# 
  1918  071A                     	;# 
  1919  071A                     	;# 
  1920  071B                     	;# 
  1921  071B                     	;# 
  1922  071C                     	;# 
  1923  071C                     	;# 
  1924  071C                     	;# 
  1925  071C                     	;# 
  1926  071C                     	;# 
  1927  071D                     	;# 
  1928  071D                     	;# 
  1929  071E                     	;# 
  1930  071E                     	;# 
  1931  0791                     	;# 
  1932  0791                     	;# 
  1933  0793                     	;# 
  1934  0793                     	;# 
  1935  0794                     	;# 
  1936  0794                     	;# 
  1937  0796                     	;# 
  1938  0796                     	;# 
  1939  0796                     	;# 
  1940  0797                     	;# 
  1941  0797                     	;# 
  1942  0797                     	;# 
  1943  0798                     	;# 
  1944  0798                     	;# 
  1945  0799                     	;# 
  1946  0799                     	;# 
  1947  0799                     	;# 
  1948  079A                     	;# 
  1949  079A                     	;# 
  1950  079A                     	;# 
  1951  079B                     	;# 
  1952  079C                     	;# 
  1953  079C                     	;# 
  1954  079C                     	;# 
  1955  079D                     	;# 
  1956  079E                     	;# 
  1957  079E                     	;# 
  1958  0F8C                     	;# 
  1959  0F8D                     	;# 
  1960  0F91                     	;# 
  1961  0F96                     	;# 
  1962  0F97                     	;# 
  1963  0F9C                     	;# 
  1964  0F9D                     	;# 
  1965  0F9E                     	;# 
  1966  0FE3                     	;# 
  1967  0FE4                     	;# 
  1968  0FE5                     	;# 
  1969  0FE6                     	;# 
  1970  0FE7                     	;# 
  1971  0FE8                     	;# 
  1972  0FE9                     	;# 
  1973  0FEA                     	;# 
  1974  0FEB                     	;# 
  1975  0FED                     	;# 
  1976  0FEE                     	;# 
  1977  0FEF                     	;# 
  1978                           
  1979 ;; Function _Sensor_DefaultCallback is unused but had its address taken
  1980  0000                     
  1981 ;; Function _Proximity_State_Initializing is unused but had its address taken
  1982  0000                     
  1983 ;; Function _Proximity_State_NotActivated is unused but had its address taken
  1984  0000                     
  1985 ;; Function _Proximity_State_Activated is unused but had its address taken
  1986  0000                     
  1987 ;; Function _Proximity_DefaultCallback is unused but had its address taken
  1988  0000                     
  1989                           	psect	idataBANK0
  1990  0198                     __pidataBANK0:	
  1991                           
  1992                           ;initializer for _Proximity_StateMachine
  1993  0198  3400               	retlw	0
  1994  0199  3400               	retlw	0
  1995  019A  3400               	retlw	0
  1996  019B  3400               	retlw	0
  1997  019C  3400               	retlw	0
  1998  019D  3400               	retlw	0
  1999                           
  2000                           ;initializer for _callback_notActivated
  2001  019E  3400               	retlw	0
  2002  019F  3400               	retlw	0
  2003                           
  2004                           ;initializer for _callback_activated
  2005  01A0  3400               	retlw	0
  2006  01A1  3400               	retlw	0
  2007                           
  2008                           ;initializer for _callback_sampled
  2009  01A2  3400               	retlw	0
  2010  01A3  3400               	retlw	0
  2011                           
  2012                           ;initializer for _sample_period
  2013  01A4  34AE               	retlw	174
  2014                           
  2015                           ;initializer for _mtouch_sensor
  2016  01A5  3400               	retlw	0
  2017  01A6  3431               	retlw	49
  2018  01A7  3430               	retlw	48
  2019  01A8  3410               	retlw	16
  2020  01A9  3420               	retlw	32
  2021  01AA  3400               	retlw	0
  2022  01AB  3400               	retlw	0
  2023  01AC  3400               	retlw	0
  2024  01AD  3400               	retlw	0
  2025                           
  2026                           	psect	idataBANK1
  2027  01D9                     __pidataBANK1:	
  2028                           
  2029                           ;initializer for _data
  2030  01D9  345F               	retlw	95
  2031  01DA  34B4               	retlw	180
  2032  01DB  3400               	retlw	0
  2033  01DC  3486               	retlw	134
  2034  01DD  344A               	retlw	74
  2035  01DE  3403               	retlw	3
  2036  01DF  34EB               	retlw	235
  2037  01E0  3400               	retlw	0
  2038  01E1  3400               	retlw	0
  2039  01E2  3400               	retlw	0
  2040  01E3  3400               	retlw	0
  2041  01E4  3400               	retlw	0
  2042  01E5  3400               	retlw	0
  2043  01E6  3400               	retlw	0
  2044  01E7  34AA               	retlw	170
  2045  01E8  3455               	retlw	85
  2046  01E9  3401               	retlw	1
  2047  01EA  346E               	retlw	110
  2048  01EB  34A0               	retlw	160
  2049                           
  2050                           	psect	stringtext1
  2051  02BE                     __pstringtext1:	
  2052  02BE                     Sensor_Scanfrequency_Evaluation@frequency_hop:	
  2053  02BE  3400               	retlw	0
  2054  02BF  340D               	retlw	13
  2055  02C0  341C               	retlw	28
  2056  02C1  341E               	retlw	30
  2057  02C2  3417               	retlw	23
  2058  02C3                     __end_ofSensor_Scanfrequency_Evaluation@frequency_hop:	
  2059                           
  2060                           	psect	stringtext2
  2061  02CF                     __pstringtext2:	
  2062  02CF                     _sensor_scan_group:	
  2063  02CF  3464               	retlw	low (_mtouch_sensor| 0)
  2064  02D0  3400               	retlw	0
  2065  02D1                     __end_of_sensor_scan_group:	
  2066                           
  2067                           	psect	stringtext3
  2068  0225                     __pstringtext3:	
  2069  0225                     _mtouch_proximity_init:	
  2070  0225  3400               	retlw	0
  2071  0226  3400               	retlw	0
  2072  0227  3400               	retlw	0
  2073  0228  3400               	retlw	0
  2074  0229  3400               	retlw	0
  2075  022A  3400               	retlw	0
  2076  022B  3400               	retlw	0
  2077  022C  3400               	retlw	0
  2078  022D  3400               	retlw	0
  2079  022E  3400               	retlw	0
  2080  022F  3400               	retlw	0
  2081  0230  3400               	retlw	0
  2082  0231  3400               	retlw	0
  2083  0232  3400               	retlw	0
  2084  0233  3400               	retlw	0
  2085  0234  3400               	retlw	0
  2086  0235  3464               	retlw	100
  2087  0236  3400               	retlw	0
  2088  0237                     __end_of_mtouch_proximity_init:	
  2089                           
  2090                           	psect	nvBANK0
  2091  006D                     __pnvBANK0:	
  2092  006D                     _EUSART_TxDefaultInterruptHandler:	
  2093  006D                     	ds	2
  2094  006F                     _eusartTxBufferRemaining:	
  2095  006F                     	ds	1
  2096                           
  2097                           	psect	nvBANK1
  2098  00B3                     __pnvBANK1:	
  2099  00B3                     _EUSART_ErrorHandler:	
  2100  00B3                     	ds	2
  2101  00B5                     _EUSART_OverrunErrorHandler:	
  2102  00B5                     	ds	2
  2103  00B7                     _EUSART_FramingErrorHandler:	
  2104  00B7                     	ds	2
  2105  00B9                     _EUSART_RxDefaultInterruptHandler:	
  2106  00B9                     	ds	2
  2107  001C                     _T2CON	set	28
  2108  001A                     _TMR2	set	26
  2109  001B                     _PR2	set	27
  2110  000B                     _INTCONbits	set	11
  2111  0012                     _PIR2bits	set	18
  2112  0011                     _PIR1bits	set	17
  2113  001C                     _T2CONbits	set	28
  2114  005F                     _GIE	set	95
  2115  0095                     _OPTION_REGbits	set	149
  2116  008E                     _TRISC	set	142
  2117  008D                     _TRISB	set	141
  2118  008C                     _TRISA	set	140
  2119  0097                     _WDTCON	set	151
  2120  0099                     _OSCCON	set	153
  2121  0091                     _PIE1bits	set	145
  2122  011D                     _APFCON	set	285
  2123  010E                     _LATC	set	270
  2124  010D                     _LATB	set	269
  2125  010C                     _LATA	set	268
  2126  0116                     _BORCON	set	278
  2127  011D                     _APFCONbits	set	285
  2128  018C                     _ANSELA	set	396
  2129  018D                     _ANSELB	set	397
  2130  018E                     _ANSELC	set	398
  2131  0199                     _RCREG	set	409
  2132  019D                     _RCSTAbits	set	413
  2133  019A                     _TXREG	set	410
  2134  019E                     _TXSTAbits	set	414
  2135  019C                     _SPBRGH	set	412
  2136  019B                     _SPBRGL	set	411
  2137  019E                     _TXSTA	set	414
  2138  019D                     _RCSTA	set	413
  2139  019F                     _BAUDCON	set	415
  2140  020C                     _WPUA	set	524
  2141  020D                     _WPUB	set	525
  2142  071A                     _AAD1RES0	set	1818
  2143  0711                     _AD1CON0bits	set	1809
  2144  0714                     _AAD1CON3	set	1812
  2145  0713                     _AD1CON2	set	1811
  2146  0717                     _AD1ACQCON	set	1815
  2147  0716                     _AD1PRECON	set	1814
  2148  0718                     _AAD1GRD	set	1816
  2149  0713                     _AAD1CON2	set	1811
  2150  0719                     _AAD1CAP	set	1817
  2151  0714                     _AD1CON3	set	1812
  2152  0712                     _ADCOMCON	set	1810
  2153  0711                     _AD1CON0	set	1809
  2154  079A                     _AAD2RES0	set	1946
  2155  0791                     _AD2CON0bits	set	1937
  2156  0797                     _AD2ACQCON	set	1943
  2157  0796                     _AD2PRECON	set	1942
  2158  0794                     _AAD2CON3	set	1940
  2159  0798                     _AAD2GRD	set	1944
  2160  0793                     _AD2CON2	set	1939
  2161  0794                     _AD2CON3	set	1940
  2162  0791                     _AD2CON0	set	1937
  2163                           
  2164                           ; #config settings
  2165  0000                     
  2166                           	psect	cinit
  2167  002F                     start_initialization:	
  2168  002F                     __initialization:	
  2169                           
  2170                           ; Initialize objects allocated to BANK0
  2171  002F  3098               	movlw	low __pidataBANK0
  2172  0030  0084               	movwf	4
  2173  0031  3081               	movlw	(high __pidataBANK0)| (0+128)
  2174  0032  0085               	movwf	5
  2175  0033  3057               	movlw	low __pdataBANK0
  2176  0034  0086               	movwf	6
  2177  0035  3000               	movlw	high __pdataBANK0
  2178  0036  0087               	movwf	7
  2179  0037  3016               	movlw	22
  2180  0038  3182  2288  3180   	fcall	init_ram
  2181                           
  2182                           ; Initialize objects allocated to BANK1
  2183  003B  30D9               	movlw	low __pidataBANK1
  2184  003C  0084               	movwf	4
  2185  003D  3081               	movlw	(high __pidataBANK1)| (0+128)
  2186  003E  0085               	movwf	5
  2187  003F  30A0               	movlw	low __pdataBANK1
  2188  0040  0086               	movwf	6
  2189  0041  3000               	movlw	high __pdataBANK1
  2190  0042  0087               	movwf	7
  2191  0043  3013               	movlw	19
  2192  0044  3182  2288  3180   	fcall	init_ram
  2193                           
  2194                           ; Clear objects allocated to COMMON
  2195  0047  01FA               	clrf	__pbssCOMMON& (0+127)
  2196  0048  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2197  0049  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  2198                           
  2199                           ; Clear objects allocated to BANK0
  2200  004A  3020               	movlw	low __pbssBANK0
  2201  004B  0084               	movwf	4
  2202  004C  3000               	movlw	high __pbssBANK0
  2203  004D  0085               	movwf	5
  2204  004E  3037               	movlw	55
  2205  004F  3182  228E  3180   	fcall	clear_ram0
  2206  0052                     end_of_initialization:	
  2207                           ;End of C runtime variable initialization code
  2208                           
  2209  0052                     __end_of__initialization:	
  2210  0052  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2211  0053  0020               	movlb	0
  2212  0054  3182  2A94         	ljmp	_main	;jump to C main() function
  2213                           
  2214                           	psect	bssCOMMON
  2215  007A                     __pbssCOMMON:	
  2216  007A                     _sensor_globalFlags:	
  2217  007A                     	ds	1
  2218  007B                     _eusartRxTail:	
  2219  007B                     	ds	1
  2220  007C                     _eusartRxHead:	
  2221  007C                     	ds	1
  2222                           
  2223                           	psect	bssBANK0
  2224  0020                     __pbssBANK0:	
  2225  0020                     _eusartRxStatusBuffer:	
  2226  0020                     	ds	8
  2227  0028                     _eusartRxBuffer:	
  2228  0028                     	ds	8
  2229  0030                     _eusartTxBuffer:	
  2230  0030                     	ds	8
  2231  0038                     _packet_sample:	
  2232  0038                     	ds	4
  2233  003C                     _packet_noise:	
  2234  003C                     	ds	2
  2235  003E                     _mtouch_time_toScan:	
  2236  003E                     	ds	1
  2237  003F                     MTOUCH_DataStreamer_Service@sequence:	
  2238  003F                     	ds	1
  2239  0040                     _lowpowerActivated:	
  2240  0040                     	ds	1
  2241  0041                     _eusartRxLastError:	
  2242  0041                     	ds	1
  2243  0042                     _eusartRxCount:	
  2244  0042                     	ds	1
  2245  0043                     _eusartTxTail:	
  2246  0043                     	ds	1
  2247  0044                     _eusartTxHead:	
  2248  0044                     	ds	1
  2249  0045                     _mtouch_proximity:	
  2250  0045                     	ds	18
  2251                           
  2252                           	psect	dataBANK0
  2253  0057                     __pdataBANK0:	
  2254  0057                     _Proximity_StateMachine:	
  2255  0057                     	ds	6
  2256  005D                     _callback_notActivated:	
  2257  005D                     	ds	2
  2258  005F                     _callback_activated:	
  2259  005F                     	ds	2
  2260  0061                     _callback_sampled:	
  2261  0061                     	ds	2
  2262  0063                     _sample_period:	
  2263  0063                     	ds	1
  2264  0064                     _mtouch_sensor:	
  2265  0064                     	ds	9
  2266                           
  2267                           	psect	dataBANK1
  2268  00A0                     __pdataBANK1:	
  2269  00A0                     _data:	
  2270  00A0                     	ds	19
  2271                           
  2272                           	psect	inittext
  2273  0288                     init_ram:	
  2274  0288  00FE               	movwf	btemp
  2275  0289                     initloop:	
  2276  0289  0012               	moviw fsr0++
  2277  028A  001E               	movwi fsr1++
  2278  028B  0BFE               	decfsz	btemp,f
  2279  028C  2A89               	goto	initloop
  2280  028D  3400               	retlw	0
  2281                           
  2282                           	psect	clrtext
  2283  028E                     clear_ram0:	
  2284                           ;	Called with FSR0 containing the base address, and
  2285                           ;	WREG with the size to clear
  2286                           
  2287  028E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2288  028F                     clrloop0:	
  2289  028F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2290  0290  3101               	addfsr 0,1
  2291  0291  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2292  0292  2A8F               	goto	clrloop0	;have we reached the end yet?
  2293  0293  3400               	retlw	0	;all done for this memory range, return
  2294                           
  2295                           	psect	cstackBANK1
  2296  00BB                     __pcstackBANK1:	
  2297  00BB                     MTOUCH_Sensor_InitializeAll@sensor:	
  2298  00BB                     memcpy@tmp:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301                           
  2302                           ; 1 bytes @ 0x0
  2303  00BB                     	ds	1
  2304  00BC                     memcpy@s:	
  2305                           
  2306                           ; 2 bytes @ 0x1
  2307  00BC                     	ds	2
  2308  00BE                     memcpy@d1:	
  2309                           
  2310                           ; 1 bytes @ 0x3
  2311  00BE                     	ds	1
  2312  00BF                     memcpy@d:	
  2313                           
  2314                           ; 1 bytes @ 0x4
  2315  00BF                     	ds	1
  2316                           
  2317                           	psect	cstackCOMMON
  2318  0070                     __pcstackCOMMON:	
  2319  0070                     ?_EUSART_Receive_ISR:	
  2320  0070                     ?_EUSART_Transmit_ISR:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0070                     ??_EUSART_Transmit_ISR:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  0070                     ?_EUSART_DefaultErrorHandler:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  0070                     ?_EUSART_RxDataHandler:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  0070                     ??_EUSART_RxDataHandler:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0070                     ?_MTOUCH_Sensor_Enable:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0070                     ?_Sensor_Sampled_Reset:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0070                     ?_PIN_MANAGER_Initialize:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0070                     ?_OSCILLATOR_Initialize:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0070                     ?_WDT_Initialize:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0070                     ?_TMR2_Initialize:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0070                     ?_MTOUCH_Initialize:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0070                     ?_EUSART_Initialize:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0070                     ?_MTOUCH_Sensor_Initialize:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_MTOUCH_Proximity_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ?_MTOUCH_Proximity_InitializeAll:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_INTERRUPT_InterruptManager:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_SYSTEM_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_MTOUCH_DataStreamer_Initialize:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ?_main:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404                           
  2405                           ; 1 bytes @ 0x0
  2406  0070                     	ds	1
  2407  0071                     ?_EUSART_SetRxInterruptHandler:	
  2408  0071                     ??_EUSART_Receive_ISR:	
  2409                           ; 1 bytes @ 0x1
  2410                           
  2411  0071                     ?_EUSART_SetTxInterruptHandler:	
  2412                           ; 1 bytes @ 0x1
  2413                           
  2414  0071                     ?_EUSART_SetFramingErrorHandler:	
  2415                           ; 1 bytes @ 0x1
  2416                           
  2417  0071                     ?_EUSART_SetOverrunErrorHandler:	
  2418                           ; 1 bytes @ 0x1
  2419                           
  2420  0071                     ?_EUSART_SetErrorHandler:	
  2421                           ; 1 bytes @ 0x1
  2422                           
  2423  0071                     ??_EUSART_DefaultErrorHandler:	
  2424                           ; 1 bytes @ 0x1
  2425                           
  2426  0071                     ??_Sensor_Sampled_Reset:	
  2427                           ; 1 bytes @ 0x1
  2428                           
  2429  0071                     ?_memcpy:	
  2430                           ; 1 bytes @ 0x1
  2431                           
  2432  0071                     ??_PIN_MANAGER_Initialize:	
  2433                           ; 1 bytes @ 0x1
  2434                           
  2435  0071                     ??_OSCILLATOR_Initialize:	
  2436                           ; 1 bytes @ 0x1
  2437                           
  2438  0071                     ??_WDT_Initialize:	
  2439                           ; 1 bytes @ 0x1
  2440                           
  2441  0071                     ??_TMR2_Initialize:	
  2442                           ; 1 bytes @ 0x1
  2443                           
  2444  0071                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2445                           ; 1 bytes @ 0x1
  2446                           
  2447  0071                     ??_MTOUCH_Proximity_Initialize:	
  2448                           ; 1 bytes @ 0x1
  2449                           
  2450  0071                     ??_INTERRUPT_InterruptManager:	
  2451                           ; 1 bytes @ 0x1
  2452                           
  2453  0071                     ??_MTOUCH_DataStreamer_Initialize:	
  2454                           ; 1 bytes @ 0x1
  2455                           
  2456  0071                     ?___bmul:	
  2457                           ; 1 bytes @ 0x1
  2458                           
  2459  0071                     Sensor_Sampled_Reset@sensor:	
  2460                           ; 1 bytes @ 0x1
  2461                           
  2462  0071                     ___bmul@multiplicand:	
  2463                           ; 1 bytes @ 0x1
  2464                           
  2465  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2466                           ; 1 bytes @ 0x1
  2467                           
  2468  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2469                           ; 2 bytes @ 0x1
  2470                           
  2471  0071                     EUSART_SetErrorHandler@interruptHandler:	
  2472                           ; 2 bytes @ 0x1
  2473                           
  2474  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2475                           ; 2 bytes @ 0x1
  2476                           
  2477  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2478                           ; 2 bytes @ 0x1
  2479                           
  2480  0071                     memcpy@s1:	
  2481                           ; 2 bytes @ 0x1
  2482                           
  2483                           
  2484                           ; 2 bytes @ 0x1
  2485  0071                     	ds	1
  2486  0072                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  2487  0072                     ??___bmul:	
  2488                           ; 1 bytes @ 0x2
  2489                           
  2490  0072                     MTOUCH_Proximity_Initialize@name:	
  2491                           ; 1 bytes @ 0x2
  2492                           
  2493                           
  2494                           ; 1 bytes @ 0x2
  2495  0072                     	ds	1
  2496  0073                     ??_EUSART_SetRxInterruptHandler:	
  2497  0073                     ??_EUSART_SetTxInterruptHandler:	
  2498                           ; 1 bytes @ 0x3
  2499                           
  2500  0073                     ??_EUSART_SetFramingErrorHandler:	
  2501                           ; 1 bytes @ 0x3
  2502                           
  2503  0073                     ??_EUSART_SetOverrunErrorHandler:	
  2504                           ; 1 bytes @ 0x3
  2505                           
  2506  0073                     ??_EUSART_SetErrorHandler:	
  2507                           ; 1 bytes @ 0x3
  2508                           
  2509  0073                     ??_EUSART_Initialize:	
  2510                           ; 1 bytes @ 0x3
  2511                           
  2512  0073                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  2513                           ; 1 bytes @ 0x3
  2514                           
  2515  0073                     MTOUCH_Proximity_Initialize@prox:	
  2516                           ; 1 bytes @ 0x3
  2517                           
  2518  0073                     ___bmul@product:	
  2519                           ; 1 bytes @ 0x3
  2520                           
  2521  0073                     memcpy@n:	
  2522                           ; 1 bytes @ 0x3
  2523                           
  2524                           
  2525                           ; 2 bytes @ 0x3
  2526  0073                     	ds	1
  2527  0074                     ___bmul@multiplier:	
  2528                           
  2529                           ; 1 bytes @ 0x4
  2530  0074                     	ds	1
  2531  0075                     ??_MTOUCH_Sensor_Enable:	
  2532  0075                     ??_MTOUCH_Sensor_Calibrate:	
  2533                           ; 1 bytes @ 0x5
  2534                           
  2535  0075                     ??_memcpy:	
  2536                           ; 1 bytes @ 0x5
  2537                           
  2538                           
  2539                           ; 1 bytes @ 0x5
  2540  0075                     	ds	1
  2541  0076                     ??_MTOUCH_Proximity_InitializeAll:	
  2542  0076                     MTOUCH_Sensor_Enable@sensor:	
  2543                           ; 1 bytes @ 0x6
  2544                           
  2545  0076                     MTOUCH_Sensor_Calibrate@sensor:	
  2546                           ; 1 bytes @ 0x6
  2547                           
  2548                           
  2549                           ; 1 bytes @ 0x6
  2550  0076                     	ds	1
  2551  0077                     ??_MTOUCH_Sensor_Initialize:	
  2552                           
  2553                           ; 1 bytes @ 0x7
  2554  0077                     	ds	1
  2555  0078                     MTOUCH_Sensor_Initialize@sensor:	
  2556                           
  2557                           ; 1 bytes @ 0x8
  2558  0078                     	ds	1
  2559  0079                     ??_MTOUCH_Sensor_InitializeAll:	
  2560                           
  2561                           ; 1 bytes @ 0x9
  2562  0079                     	ds	1
  2563  007A                     ??_MTOUCH_Initialize:	
  2564  007A                     ??_SYSTEM_Initialize:	
  2565                           ; 1 bytes @ 0xA
  2566                           
  2567  007A                     ??_main:	
  2568                           ; 1 bytes @ 0xA
  2569                           
  2570                           
  2571                           	psect	maintext
  2572  0294                     __pmaintext:	
  2573                           ; 1 bytes @ 0xA
  2574 ;;
  2575 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2576 ;;
  2577 ;; *************** function _main *****************
  2578 ;; Defined at:
  2579 ;;		line 49 in file "main.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : B1F/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2593 ;;      Params:         0       0       0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0
  2596 ;;      Totals:         0       0       0       0       0       0       0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels required when called:   10
  2599 ;; This function calls:
  2600 ;;		_SYSTEM_Initialize
  2601 ;; This function is called by:
  2602 ;;		Startup code after reset
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _main
  2608  0294                     _main:	
  2609  0294                     l4262:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;main.c: 52:     SYSTEM_Initialize();
  2615  0294  3181  21EC  3182   	fcall	_SYSTEM_Initialize
  2616  0297                     l866:	
  2617                           ;main.c: 69:     while (1)
  2618                           
  2619  0297                     l867:	
  2620                           ;main.c: 70:     {;main.c: 72:     }
  2621                           
  2622  0297  2A97               	goto	l866
  2623  0298  3180  282D         	ljmp	start
  2624  029A                     __end_of_main:	
  2625                           
  2626                           	psect	text1
  2627  01EC                     __ptext1:	
  2628 ;; *************** function _SYSTEM_Initialize *****************
  2629 ;; Defined at:
  2630 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2644 ;;      Params:         0       0       0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    9
  2651 ;; This function calls:
  2652 ;;		_EUSART_Initialize
  2653 ;;		_MTOUCH_Initialize
  2654 ;;		_OSCILLATOR_Initialize
  2655 ;;		_PIN_MANAGER_Initialize
  2656 ;;		_TMR2_Initialize
  2657 ;;		_WDT_Initialize
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _SYSTEM_Initialize
  2665  01EC                     _SYSTEM_Initialize:	
  2666  01EC                     l4128:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2672  01EC  3181  2164  3181   	fcall	_PIN_MANAGER_Initialize
  2673                           
  2674                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2675  01EF  3182  229A  3181   	fcall	_OSCILLATOR_Initialize
  2676                           
  2677                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2678  01F2  3182  22C3  3181   	fcall	_WDT_Initialize
  2679                           
  2680                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2681  01F5  3182  2279  3181   	fcall	_TMR2_Initialize
  2682                           
  2683                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2684  01F8  3180  2056  3181   	fcall	_EUSART_Initialize
  2685  01FB                     l4130:	
  2686                           
  2687                           ;mcc_generated_files/mcc.c: 58:     MTOUCH_Initialize();
  2688  01FB  3182  2259  3181   	fcall	_MTOUCH_Initialize
  2689  01FE                     l783:	
  2690  01FE  0008               	return
  2691  01FF                     __end_of_SYSTEM_Initialize:	
  2692                           
  2693                           	psect	text2
  2694  02C3                     __ptext2:	
  2695 ;; *************** function _WDT_Initialize *****************
  2696 ;; Defined at:
  2697 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2711 ;;      Params:         0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    4
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_SYSTEM_Initialize
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _WDT_Initialize
  2727  02C3                     _WDT_Initialize:	
  2728  02C3                     l2392:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _WDT_Initialize: [wreg]
  2731                           
  2732                           
  2733                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  2734  02C3  3016               	movlw	22
  2735  02C4  0021               	movlb	1	; select bank1
  2736  02C5  0097               	movwf	23	;volatile
  2737  02C6                     l789:	
  2738  02C6  0008               	return
  2739  02C7                     __end_of_WDT_Initialize:	
  2740                           
  2741                           	psect	text3
  2742  0279                     __ptext3:	
  2743 ;; *************** function _TMR2_Initialize *****************
  2744 ;; Defined at:
  2745 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2759 ;;      Params:         0       0       0       0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    4
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_SYSTEM_Initialize
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _TMR2_Initialize
  2775  0279                     _TMR2_Initialize:	
  2776  0279                     l2394:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2779                           
  2780                           
  2781                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  2782  0279  30FF               	movlw	255
  2783  027A  0020               	movlb	0	; select bank0
  2784  027B  009B               	movwf	27	;volatile
  2785  027C                     l2396:	
  2786                           
  2787                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  2788  027C  019A               	clrf	26	;volatile
  2789  027D                     l2398:	
  2790                           
  2791                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  2792  027D  1091               	bcf	17,1	;volatile
  2793  027E                     l2400:	
  2794                           
  2795                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  2796  027E  3004               	movlw	4
  2797  027F  009C               	movwf	28	;volatile
  2798  0280                     l882:	
  2799  0280  0008               	return
  2800  0281                     __end_of_TMR2_Initialize:	
  2801                           
  2802                           	psect	text4
  2803  0164                     __ptext4:	
  2804 ;; *************** function _PIN_MANAGER_Initialize *****************
  2805 ;; Defined at:
  2806 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2820 ;;      Params:         0       0       0       0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    4
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_SYSTEM_Initialize
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _PIN_MANAGER_Initialize
  2836  0164                     _PIN_MANAGER_Initialize:	
  2837  0164                     l2372:	
  2838                           ;incstack = 0
  2839                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2840                           
  2841                           
  2842                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2843  0164  0022               	movlb	2	; select bank2
  2844  0165  018C               	clrf	12	;volatile
  2845                           
  2846                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2847  0166  018D               	clrf	13	;volatile
  2848                           
  2849                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2850  0167  018E               	clrf	14	;volatile
  2851  0168                     l2374:	
  2852                           
  2853                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  2854  0168  303F               	movlw	63
  2855  0169  0021               	movlb	1	; select bank1
  2856  016A  008C               	movwf	12	;volatile
  2857  016B                     l2376:	
  2858                           
  2859                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  2860  016B  3070               	movlw	112
  2861  016C  008D               	movwf	13	;volatile
  2862  016D                     l2378:	
  2863                           
  2864                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x6A;
  2865  016D  306A               	movlw	106
  2866  016E  008E               	movwf	14	;volatile
  2867  016F                     l2380:	
  2868                           
  2869                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7E;
  2870  016F  307E               	movlw	126
  2871  0170  0023               	movlb	3	; select bank3
  2872  0171  008E               	movwf	14	;volatile
  2873  0172                     l2382:	
  2874                           
  2875                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x50;
  2876  0172  3050               	movlw	80
  2877  0173  008D               	movwf	13	;volatile
  2878  0174                     l2384:	
  2879                           
  2880                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  2881  0174  3037               	movlw	55
  2882  0175  008C               	movwf	12	;volatile
  2883                           
  2884                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2885  0176  0024               	movlb	4	; select bank4
  2886  0177  018D               	clrf	13	;volatile
  2887                           
  2888                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2889  0178  018C               	clrf	12	;volatile
  2890  0179                     l2386:	
  2891                           
  2892                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  2893  0179  0021               	movlb	1	; select bank1
  2894  017A  1795               	bsf	21,7	;volatile
  2895                           
  2896                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  2897  017B  0022               	movlb	2	; select bank2
  2898  017C  019D               	clrf	29	;volatile
  2899  017D                     l818:	
  2900  017D  0008               	return
  2901  017E                     __end_of_PIN_MANAGER_Initialize:	
  2902                           
  2903                           	psect	text5
  2904  029A                     __ptext5:	
  2905 ;; *************** function _OSCILLATOR_Initialize *****************
  2906 ;; Defined at:
  2907 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2921 ;;      Params:         0       0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    4
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_SYSTEM_Initialize
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _OSCILLATOR_Initialize
  2937  029A                     _OSCILLATOR_Initialize:	
  2938  029A                     l2388:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2941                           
  2942                           
  2943                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2944  029A  3070               	movlw	112
  2945  029B  0021               	movlb	1	; select bank1
  2946  029C  0099               	movwf	25	;volatile
  2947  029D                     l2390:	
  2948                           
  2949                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2950  029D  0022               	movlb	2	; select bank2
  2951  029E  0196               	clrf	22	;volatile
  2952  029F                     l786:	
  2953  029F  0008               	return
  2954  02A0                     __end_of_OSCILLATOR_Initialize:	
  2955                           
  2956                           	psect	text6
  2957  0259                     __ptext6:	
  2958 ;; *************** function _MTOUCH_Initialize *****************
  2959 ;; Defined at:
  2960 ;;		line 80 in file "mcc_generated_files/mtouch/mtouch.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2974 ;;      Params:         0       0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    8
  2981 ;; This function calls:
  2982 ;;		_MTOUCH_DataStreamer_Initialize
  2983 ;;		_MTOUCH_Proximity_InitializeAll
  2984 ;;		_MTOUCH_Sensor_InitializeAll
  2985 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  2986 ;;		_MTOUCH_Sensor_Scan_Initialize
  2987 ;; This function is called by:
  2988 ;;		_SYSTEM_Initialize
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _MTOUCH_Initialize
  2994  0259                     _MTOUCH_Initialize:	
  2995  0259                     l4116:	
  2996                           ;incstack = 0
  2997                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2998                           
  2999                           
  3000                           ;mcc_generated_files/mtouch/mtouch.c: 82:     MTOUCH_Sensor_InitializeAll();
  3001  0259  3182  2237  3182   	fcall	_MTOUCH_Sensor_InitializeAll
  3002  025C                     l4118:	
  3003                           
  3004                           ;mcc_generated_files/mtouch/mtouch.c: 83:     MTOUCH_Proximity_InitializeAll();
  3005  025C  3182  2248  3182   	fcall	_MTOUCH_Proximity_InitializeAll
  3006  025F                     l4120:	
  3007                           
  3008                           ;mcc_generated_files/mtouch/mtouch.c: 85:     MTOUCH_DataStreamer_Initialize();
  3009  025F  3182  22D1  3182   	fcall	_MTOUCH_DataStreamer_Initialize
  3010  0262                     l4122:	
  3011                           
  3012                           ;mcc_generated_files/mtouch/mtouch.c: 87:     MTOUCH_Sensor_Sampled_ResetAll();
  3013  0262  3181  2146  3182   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  3014  0265                     l4124:	
  3015                           
  3016                           ;mcc_generated_files/mtouch/mtouch.c: 88:     MTOUCH_Sensor_Scan_Initialize();
  3017  0265  3182  2269  3182   	fcall	_MTOUCH_Sensor_Scan_Initialize
  3018  0268                     l931:	
  3019  0268  0008               	return
  3020  0269                     __end_of_MTOUCH_Initialize:	
  3021                           
  3022                           	psect	text7
  3023  0269                     __ptext7:	
  3024 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  3025 ;; Defined at:
  3026 ;;		line 222 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3040 ;;      Params:         0       0       0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    4
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_MTOUCH_Initialize
  3051 ;;		_Sensor_Acq_ExecutePacket
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  3057  0269                     _MTOUCH_Sensor_Scan_Initialize:	
  3058  0269                     l3280:	
  3059                           ;incstack = 0
  3060                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0]
  3061                           
  3062                           
  3063                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 224:     T2CONbits.T2CKPS = 0x0;
  3064  0269  30FC               	movlw	-4
  3065  026A  0020               	movlb	0	; select bank0
  3066  026B  059C               	andwf	28,f	;volatile
  3067  026C                     l3282:	
  3068                           
  3069                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 226:     AD1CON0 = (uint8_t)0;
  3070  026C  002E               	movlb	14	; select bank14
  3071  026D  0191               	clrf	17	;volatile
  3072  026E                     l3284:	
  3073                           
  3074                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 227:     AD2CON0 = (uint8_t)0;
  3075  026E  002F               	movlb	15	; select bank15
  3076  026F  0191               	clrf	17	;volatile
  3077  0270                     l3286:	
  3078                           
  3079                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 228:     ADCOMCON = (uint8_t)( 0x1<<7 | 0x0
      +                          <<4 | 0x0 );
  3080  0270  3080               	movlw	128
  3081  0271  002E               	movlb	14	; select bank14
  3082  0272  0092               	movwf	18	;volatile
  3083  0273                     l3288:	
  3084                           
  3085                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 229:     AD1CON3 = (uint8_t)0b01000000;
  3086  0273  3040               	movlw	64
  3087  0274  0094               	movwf	20	;volatile
  3088  0275                     l3290:	
  3089                           
  3090                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 230:     AD2CON3 = (uint8_t)0b01000000;
  3091  0275  3040               	movlw	64
  3092  0276  002F               	movlb	15	; select bank15
  3093  0277  0094               	movwf	20	;volatile
  3094  0278                     l287:	
  3095  0278  0008               	return
  3096  0279                     __end_of_MTOUCH_Sensor_Scan_Initialize:	
  3097                           
  3098                           	psect	text8
  3099  0146                     __ptext8:	
  3100 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  3101 ;; Defined at:
  3102 ;;		line 933 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  sensor          1    3[COMMON] PTR struct .
  3107 ;;		 -> mtouch_sensor(9), 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3117 ;;      Params:         0       0       0       0       0       0       0       0
  3118 ;;      Locals:         1       0       0       0       0       0       0       0
  3119 ;;      Temps:          1       0       0       0       0       0       0       0
  3120 ;;      Totals:         2       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        2 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    5
  3124 ;; This function calls:
  3125 ;;		_Sensor_Sampled_Reset
  3126 ;; This function is called by:
  3127 ;;		_MTOUCH_Initialize
  3128 ;;		_MTOUCH_Service_Mainloop
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  3134  0146                     _MTOUCH_Sensor_Sampled_ResetAll:	
  3135  0146                     l4040:	
  3136                           ;incstack = 0
  3137                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  3138                           
  3139                           
  3140                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 935:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 936:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[1u -1];sensor++)
  3141  0146  3064               	movlw	(low (_mtouch_sensor| 0))& (0+255)
  3142  0147  00F2               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  3143  0148  0872               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  3144  0149  00F3               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  3145  014A  3064               	movlw	(low (_mtouch_sensor| 0))& (0+255)
  3146  014B  00F2               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  3147  014C  0873               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  3148  014D  0272               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  3149  014E  1803               	skipnc
  3150  014F  2951               	goto	u3501
  3151  0150  2952               	goto	u3500
  3152  0151                     u3501:	
  3153  0151  2953               	goto	l4044
  3154  0152                     u3500:	
  3155  0152  2963               	goto	l514
  3156  0153                     l4044:	
  3157                           
  3158                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 937:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 938:         Sensor_Sampled_Reset(sensor);
  3159  0153  0873               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  3160  0154  3182  2281  3181   	fcall	_Sensor_Sampled_Reset
  3161  0157                     l4046:	
  3162                           
  3163                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 939:     }
  3164  0157  3009               	movlw	9
  3165  0158  00F2               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  3166  0159  0872               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  3167  015A  07F3               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  3168  015B                     l4048:	
  3169  015B  3064               	movlw	(low (_mtouch_sensor| 0))& (0+255)
  3170  015C  00F2               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  3171  015D  0873               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  3172  015E  0272               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  3173  015F  1803               	skipnc
  3174  0160  2962               	goto	u3511
  3175  0161  2963               	goto	u3510
  3176  0162                     u3511:	
  3177  0162  2953               	goto	l4044
  3178  0163                     u3510:	
  3179  0163                     l514:	
  3180  0163  0008               	return
  3181  0164                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:	
  3182                           
  3183                           	psect	text9
  3184  0237                     __ptext9:	
  3185 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  3186 ;; Defined at:
  3187 ;;		line 206 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  sensor          1    0[BANK1 ] enum E2854
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3201 ;;      Params:         0       0       0       0       0       0       0       0
  3202 ;;      Locals:         0       0       1       0       0       0       0       0
  3203 ;;      Temps:          1       0       0       0       0       0       0       0
  3204 ;;      Totals:         1       0       1       0       0       0       0       0
  3205 ;;Total ram usage:        2 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    7
  3208 ;; This function calls:
  3209 ;;		_MTOUCH_Sensor_Initialize
  3210 ;; This function is called by:
  3211 ;;		_MTOUCH_Initialize
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _MTOUCH_Sensor_InitializeAll
  3217  0237                     _MTOUCH_Sensor_InitializeAll:	
  3218  0237                     l4016:	
  3219                           ;incstack = 0
  3220                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  3221                           
  3222                           
  3223                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 208:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 210:     for (sensor = 0; sensor < 1u; sensor
      +                          ++)
  3224  0237  0021               	movlb	1	; select bank1
  3225  0238  01BB               	clrf	MTOUCH_Sensor_InitializeAll@sensor^(0+128)
  3226  0239                     l4022:	
  3227                           
  3228                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 211:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 212:         MTOUCH_Sensor_Initialize(sensor);
  3229  0239  083B               	movf	MTOUCH_Sensor_InitializeAll@sensor^(0+128),w
  3230  023A  3181  21AE  3182   	fcall	_MTOUCH_Sensor_Initialize
  3231  023D                     l4024:	
  3232                           
  3233                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 213:     }
  3234  023D  3001               	movlw	1
  3235  023E  00F9               	movwf	??_MTOUCH_Sensor_InitializeAll
  3236  023F  0879               	movf	??_MTOUCH_Sensor_InitializeAll,w
  3237  0240  0021               	movlb	1	; select bank1
  3238  0241  07BB               	addwf	MTOUCH_Sensor_InitializeAll@sensor^(0+128),f
  3239  0242                     l4026:	
  3240  0242  083B               	movf	MTOUCH_Sensor_InitializeAll@sensor^(0+128),w
  3241  0243  1903               	btfsc	3,2
  3242  0244  2A46               	goto	u3481
  3243  0245  2A47               	goto	u3480
  3244  0246                     u3481:	
  3245  0246  2A39               	goto	l4022
  3246  0247                     u3480:	
  3247  0247                     l284:	
  3248  0247  0008               	return
  3249  0248                     __end_of_MTOUCH_Sensor_InitializeAll:	
  3250                           
  3251                           	psect	text10
  3252  01AE                     __ptext10:	
  3253 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  3254 ;; Defined at:
  3255 ;;		line 191 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  sensor          1    wreg     enum E2854
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  sensor          1    8[COMMON] enum E2854
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      enum E2856
  3262 ;; Registers used:
  3263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3269 ;;      Params:         0       0       0       0       0       0       0       0
  3270 ;;      Locals:         1       0       0       0       0       0       0       0
  3271 ;;      Temps:          1       0       0       0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    6
  3276 ;; This function calls:
  3277 ;;		_MTOUCH_Sensor_Calibrate
  3278 ;;		_MTOUCH_Sensor_Enable
  3279 ;;		_Sensor_Sampled_Reset
  3280 ;;		___bmul
  3281 ;; This function is called by:
  3282 ;;		_MTOUCH_Sensor_InitializeAll
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _MTOUCH_Sensor_Initialize
  3288  01AE                     _MTOUCH_Sensor_Initialize:	
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  3292                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  3293  01AE  00F8               	movwf	MTOUCH_Sensor_Initialize@sensor
  3294  01AF                     l3988:	
  3295                           
  3296                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 191: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           192: {;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     MTOUCH_Sensor_Enable(sensor
      +                          );
  3297  01AF  0878               	movf	MTOUCH_Sensor_Initialize@sensor,w
  3298  01B0  3181  21FF  3181   	fcall	_MTOUCH_Sensor_Enable
  3299                           
  3300                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 195:     MTOUCH_Sensor_Calibrate(sensor);
  3301  01B3  0878               	movf	MTOUCH_Sensor_Initialize@sensor,w
  3302  01B4  3182  2212  3181   	fcall	_MTOUCH_Sensor_Calibrate
  3303                           
  3304                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 196:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  3305  01B7  3009               	movlw	9
  3306  01B8  00F7               	movwf	??_MTOUCH_Sensor_Initialize
  3307  01B9  0877               	movf	??_MTOUCH_Sensor_Initialize,w
  3308  01BA  00F1               	movwf	___bmul@multiplicand
  3309  01BB  0878               	movf	MTOUCH_Sensor_Initialize@sensor,w
  3310  01BC  3181  21C4  3181   	fcall	___bmul
  3311  01BF  3E64               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  3312  01C0  3182  2281  3181   	fcall	_Sensor_Sampled_Reset
  3313  01C3                     l279:	
  3314  01C3  0008               	return
  3315  01C4                     __end_of_MTOUCH_Sensor_Initialize:	
  3316                           
  3317                           	psect	text11
  3318  0281                     __ptext11:	
  3319 ;; *************** function _Sensor_Sampled_Reset *****************
  3320 ;; Defined at:
  3321 ;;		line 947 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  sensor          1    wreg     PTR struct .
  3324 ;;		 -> mtouch_sensor(9), 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  sensor          1    1[COMMON] PTR struct .
  3327 ;;		 -> mtouch_sensor(9), 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3337 ;;      Params:         0       0       0       0       0       0       0       0
  3338 ;;      Locals:         1       0       0       0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0
  3340 ;;      Totals:         1       0       0       0       0       0       0       0
  3341 ;;Total ram usage:        1 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    4
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_MTOUCH_Sensor_Initialize
  3348 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _Sensor_Sampled_Reset
  3354  0281                     _Sensor_Sampled_Reset:	
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3358                           ;Sensor_Sampled_Reset@sensor stored from wreg
  3359  0281  00F1               	movwf	Sensor_Sampled_Reset@sensor
  3360  0282                     l3974:	
  3361                           
  3362                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 947: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          948: {;mcc_generated_files/mtouch/mtouch_sensor.c: 949:     sensor->sampled = 0;
  3363  0282  0871               	movf	Sensor_Sampled_Reset@sensor,w
  3364  0283  3E08               	addlw	8
  3365  0284  0086               	movwf	6
  3366  0285  0187               	clrf	7
  3367  0286  1001               	bcf	1,0
  3368  0287                     l520:	
  3369  0287  0008               	return
  3370  0288                     __end_of_Sensor_Sampled_Reset:	
  3371                           
  3372                           	psect	text12
  3373  01FF                     __ptext12:	
  3374 ;; *************** function _MTOUCH_Sensor_Enable *****************
  3375 ;; Defined at:
  3376 ;;		line 824 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  sensor          1    wreg     enum E2854
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  sensor          1    6[COMMON] enum E2854
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3390 ;;      Params:         0       0       0       0       0       0       0       0
  3391 ;;      Locals:         1       0       0       0       0       0       0       0
  3392 ;;      Temps:          1       0       0       0       0       0       0       0
  3393 ;;      Totals:         2       0       0       0       0       0       0       0
  3394 ;;Total ram usage:        2 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    5
  3397 ;; This function calls:
  3398 ;;		___bmul
  3399 ;; This function is called by:
  3400 ;;		_MTOUCH_Sensor_Initialize
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _MTOUCH_Sensor_Enable
  3406  01FF                     _MTOUCH_Sensor_Enable:	
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3410                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  3411  01FF  00F6               	movwf	MTOUCH_Sensor_Enable@sensor
  3412  0200                     l3966:	
  3413                           
  3414                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 824: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 825: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 826:     if(sensor < 1u)
  3415  0200  0876               	movf	MTOUCH_Sensor_Enable@sensor,w
  3416  0201  1D03               	btfss	3,2
  3417  0202  2A04               	goto	u3411
  3418  0203  2A05               	goto	u3410
  3419  0204                     u3411:	
  3420  0204  2A11               	goto	l464
  3421  0205                     u3410:	
  3422  0205                     l3968:	
  3423                           
  3424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 827:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  3425  0205  3009               	movlw	9
  3426  0206  00F5               	movwf	??_MTOUCH_Sensor_Enable
  3427  0207  0875               	movf	??_MTOUCH_Sensor_Enable,w
  3428  0208  00F1               	movwf	___bmul@multiplicand
  3429  0209  0876               	movf	MTOUCH_Sensor_Enable@sensor,w
  3430  020A  3181  21C4  3181   	fcall	___bmul
  3431  020D  3E6C               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  3432  020E  0086               	movwf	6
  3433  020F  0187               	clrf	7
  3434  0210  1581               	bsf	1,3
  3435  0211                     l464:	
  3436  0211  0008               	return
  3437  0212                     __end_of_MTOUCH_Sensor_Enable:	
  3438                           
  3439                           	psect	text13
  3440  0212                     __ptext13:	
  3441 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  3442 ;; Defined at:
  3443 ;;		line 887 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  sensor          1    wreg     enum E2854
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  sensor          1    6[COMMON] enum E2854
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3457 ;;      Params:         0       0       0       0       0       0       0       0
  3458 ;;      Locals:         1       0       0       0       0       0       0       0
  3459 ;;      Temps:          1       0       0       0       0       0       0       0
  3460 ;;      Totals:         2       0       0       0       0       0       0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    5
  3464 ;; This function calls:
  3465 ;;		___bmul
  3466 ;; This function is called by:
  3467 ;;		_MTOUCH_Sensor_Initialize
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function _MTOUCH_Sensor_Calibrate
  3473  0212                     _MTOUCH_Sensor_Calibrate:	
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  3477                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
  3478  0212  00F6               	movwf	MTOUCH_Sensor_Calibrate@sensor
  3479  0213                     l3970:	
  3480                           
  3481                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 887: void MTOUCH_Sensor_Calibrate(enum mtou
      +                          ch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 888: {;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 889:     if(sensor < 1u)
  3482  0213  0876               	movf	MTOUCH_Sensor_Calibrate@sensor,w
  3483  0214  1D03               	btfss	3,2
  3484  0215  2A17               	goto	u3421
  3485  0216  2A18               	goto	u3420
  3486  0217                     u3421:	
  3487  0217  2A24               	goto	l492
  3488  0218                     u3420:	
  3489  0218                     l3972:	
  3490                           
  3491                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 890:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 891:         mtouch_sensor[sensor].calibrated = 0;
  3492  0218  3009               	movlw	9
  3493  0219  00F5               	movwf	??_MTOUCH_Sensor_Calibrate
  3494  021A  0875               	movf	??_MTOUCH_Sensor_Calibrate,w
  3495  021B  00F1               	movwf	___bmul@multiplicand
  3496  021C  0876               	movf	MTOUCH_Sensor_Calibrate@sensor,w
  3497  021D  3181  21C4  3182   	fcall	___bmul
  3498  0220  3E6C               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  3499  0221  0086               	movwf	6
  3500  0222  0187               	clrf	7
  3501  0223  1101               	bcf	1,2
  3502  0224                     l492:	
  3503  0224  0008               	return
  3504  0225                     __end_of_MTOUCH_Sensor_Calibrate:	
  3505                           
  3506                           	psect	text14
  3507  01C4                     __ptext14:	
  3508 ;; *************** function ___bmul *****************
  3509 ;; Defined at:
  3510 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  multiplier      1    wreg     unsigned char 
  3513 ;;  multiplicand    1    1[COMMON] unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  multiplier      1    4[COMMON] unsigned char 
  3516 ;;  product         1    3[COMMON] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      unsigned char 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3526 ;;      Params:         1       0       0       0       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0       0       0       0
  3528 ;;      Temps:          1       0       0       0       0       0       0       0
  3529 ;;      Totals:         4       0       0       0       0       0       0       0
  3530 ;;Total ram usage:        4 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    4
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_MTOUCH_Sensor_Initialize
  3537 ;;		_MTOUCH_Sensor_Enable
  3538 ;;		_MTOUCH_Sensor_Calibrate
  3539 ;;		_MTOUCH_Sensor_isAnySensorActive
  3540 ;;		_MTOUCH_Sensor_RawSample_Get
  3541 ;;		_MTOUCH_Sensor_Disable
  3542 ;;		_MTOUCH_Sensor_isEnabled
  3543 ;;		_MTOUCH_Sensor_isActive
  3544 ;;		_MTOUCH_Sensor_isCalibrated
  3545 ;;		_MTOUCH_Sensor_wasSampled
  3546 ;;		_MTOUCH_Sensor_AdditionalCap_Get
  3547 ;;		_MTOUCH_Sensor_AcquisitionTime_Get
  3548 ;;		_MTOUCH_Sensor_PreChargeTime_Get
  3549 ;;		_MTOUCH_Sensor_Oversampling_Get
  3550 ;;		_MTOUCH_Sensor_Oversampling_Set
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function ___bmul
  3556  01C4                     ___bmul:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3560                           ;___bmul@multiplier stored from wreg
  3561  01C4  00F4               	movwf	___bmul@multiplier
  3562  01C5                     l3952:	
  3563  01C5  01F3               	clrf	___bmul@product
  3564  01C6                     l3954:	
  3565  01C6  1C74               	btfss	___bmul@multiplier,0
  3566  01C7  29C9               	goto	u3391
  3567  01C8  29CA               	goto	u3390
  3568  01C9                     u3391:	
  3569  01C9  29CE               	goto	l3958
  3570  01CA                     u3390:	
  3571  01CA                     l3956:	
  3572  01CA  0871               	movf	___bmul@multiplicand,w
  3573  01CB  00F2               	movwf	??___bmul
  3574  01CC  0872               	movf	??___bmul,w
  3575  01CD  07F3               	addwf	___bmul@product,f
  3576  01CE                     l3958:	
  3577  01CE  1003               	clrc
  3578  01CF  0DF1               	rlf	___bmul@multiplicand,f
  3579  01D0                     l3960:	
  3580  01D0  1003               	clrc
  3581  01D1  0CF4               	rrf	___bmul@multiplier,f
  3582  01D2  0874               	movf	___bmul@multiplier,w
  3583  01D3  1D03               	btfss	3,2
  3584  01D4  29D6               	goto	u3401
  3585  01D5  29D7               	goto	u3400
  3586  01D6                     u3401:	
  3587  01D6  29C6               	goto	l3954
  3588  01D7                     u3400:	
  3589  01D7                     l3962:	
  3590  01D7  0873               	movf	___bmul@product,w
  3591  01D8                     l1037:	
  3592  01D8  0008               	return
  3593  01D9                     __end_of___bmul:	
  3594                           
  3595                           	psect	text15
  3596  0248                     __ptext15:	
  3597 ;; *************** function _MTOUCH_Proximity_InitializeAll *****************
  3598 ;; Defined at:
  3599 ;;		line 161 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3613 ;;      Params:         0       0       0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    5
  3620 ;; This function calls:
  3621 ;;		_MTOUCH_Proximity_Initialize
  3622 ;;		_memcpy
  3623 ;; This function is called by:
  3624 ;;		_MTOUCH_Initialize
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           
  3629                           ;psect for function _MTOUCH_Proximity_InitializeAll
  3630  0248                     _MTOUCH_Proximity_InitializeAll:	
  3631  0248                     l4054:	
  3632                           ;incstack = 0
  3633                           ; Regs used in _MTOUCH_Proximity_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  3634                           
  3635                           
  3636                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 163:     memcpy(mtouch_proximity,mtouch_
      +                          proximity_init,sizeof(mtouch_proximity_init));
  3637  0248  3025               	movlw	low (_mtouch_proximity_init| (0+32768))
  3638  0249  00F1               	movwf	memcpy@s1
  3639  024A  3082               	movlw	high (_mtouch_proximity_init| (0+32768))
  3640  024B  00F2               	movwf	memcpy@s1+1
  3641  024C  3012               	movlw	18
  3642  024D  00F3               	movwf	memcpy@n
  3643  024E  3000               	movlw	0
  3644  024F  00F4               	movwf	memcpy@n+1
  3645  0250  3045               	movlw	(low (_mtouch_proximity| 0))& (0+255)
  3646  0251  3180  20CE  3182   	fcall	_memcpy
  3647  0254                     l4056:	
  3648                           
  3649                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 165:     MTOUCH_Proximity_Initialize(Pro
      +                          ximity0);
  3650  0254  3000               	movlw	0
  3651  0255  3180  20FD  3182   	fcall	_MTOUCH_Proximity_Initialize
  3652  0258                     l606:	
  3653  0258  0008               	return
  3654  0259                     __end_of_MTOUCH_Proximity_InitializeAll:	
  3655                           
  3656                           	psect	text16
  3657  00CE                     __ptext16:	
  3658 ;; *************** function _memcpy *****************
  3659 ;; Defined at:
  3660 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  d1              1    wreg     PTR void 
  3663 ;;		 -> mtouch_proximity(18), 
  3664 ;;  s1              2    1[COMMON] PTR const void 
  3665 ;;		 -> mtouch_proximity_init(18), 
  3666 ;;  n               2    3[COMMON] unsigned int 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  d1              1    3[BANK1 ] PTR void 
  3669 ;;		 -> mtouch_proximity(18), 
  3670 ;;  s               2    1[BANK1 ] PTR const unsigned char 
  3671 ;;		 -> mtouch_proximity_init(18), 
  3672 ;;  d               1    4[BANK1 ] PTR unsigned char 
  3673 ;;		 -> mtouch_proximity(18), 
  3674 ;;  tmp             1    0[BANK1 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      PTR void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3684 ;;      Params:         4       0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       5       0       0       0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0       0
  3687 ;;      Totals:         5       0       5       0       0       0       0       0
  3688 ;;Total ram usage:       10 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    4
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_MTOUCH_Proximity_InitializeAll
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _memcpy
  3700  00CE                     _memcpy:	
  3701                           
  3702                           ;incstack = 0
  3703                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  3704                           ;memcpy@d1 stored from wreg
  3705  00CE  0021               	movlb	1	; select bank1
  3706  00CF  00BE               	movwf	memcpy@d1^(0+128)
  3707  00D0                     l3992:	
  3708  00D0  0872               	movf	memcpy@s1+1,w
  3709  00D1  00BD               	movwf	(memcpy@s+1)^(0+128)
  3710  00D2  0871               	movf	memcpy@s1,w
  3711  00D3  00BC               	movwf	memcpy@s^(0+128)
  3712  00D4  083E               	movf	memcpy@d1^(0+128),w
  3713  00D5  00F5               	movwf	??_memcpy
  3714  00D6  0875               	movf	??_memcpy,w
  3715  00D7  00BF               	movwf	memcpy@d^(0+128)
  3716  00D8  28F0               	goto	l4002
  3717  00D9                     l3994:	
  3718  00D9  083C               	movf	memcpy@s^(0+128),w
  3719  00DA  0084               	movwf	4
  3720  00DB  083D               	movf	(memcpy@s+1)^(0+128),w
  3721  00DC  0085               	movwf	5
  3722  00DD  0800               	movf	0,w	;code access
  3723  00DE  00F5               	movwf	??_memcpy
  3724  00DF  0875               	movf	??_memcpy,w
  3725  00E0  00BB               	movwf	memcpy@tmp^(0+128)
  3726  00E1                     l3996:	
  3727  00E1  3001               	movlw	1
  3728  00E2  07BC               	addwf	memcpy@s^(0+128),f
  3729  00E3  3000               	movlw	0
  3730  00E4  3DBD               	addwfc	(memcpy@s+1)^(0+128),f
  3731  00E5                     l3998:	
  3732  00E5  083B               	movf	memcpy@tmp^(0+128),w
  3733  00E6  00F5               	movwf	??_memcpy
  3734  00E7  083F               	movf	memcpy@d^(0+128),w
  3735  00E8  0086               	movwf	6
  3736  00E9  0187               	clrf	7
  3737  00EA  0875               	movf	??_memcpy,w
  3738  00EB  0081               	movwf	1
  3739  00EC                     l4000:	
  3740  00EC  3001               	movlw	1
  3741  00ED  00F5               	movwf	??_memcpy
  3742  00EE  0875               	movf	??_memcpy,w
  3743  00EF  07BF               	addwf	memcpy@d^(0+128),f
  3744  00F0                     l4002:	
  3745  00F0  3001               	movlw	1
  3746  00F1  02F3               	subwf	memcpy@n,f
  3747  00F2  3000               	movlw	0
  3748  00F3  3BF4               	subwfb	memcpy@n+1,f
  3749  00F4  0A73               	incf	memcpy@n,w
  3750  00F5  1D03               	skipz
  3751  00F6  28FB               	goto	u3441
  3752  00F7  0A74               	incf	memcpy@n+1,w
  3753  00F8  1D03               	btfss	3,2
  3754  00F9  28FB               	goto	u3441
  3755  00FA  28FC               	goto	u3440
  3756  00FB                     u3441:	
  3757  00FB  28D9               	goto	l3994
  3758  00FC                     u3440:	
  3759  00FC                     l1474:	
  3760  00FC  0008               	return
  3761  00FD                     __end_of_memcpy:	
  3762                           
  3763                           	psect	text17
  3764  00FD                     __ptext17:	
  3765 ;; *************** function _MTOUCH_Proximity_Initialize *****************
  3766 ;; Defined at:
  3767 ;;		line 141 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  name            1    wreg     enum E3067
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  name            1    2[COMMON] enum E3067
  3772 ;;  prox            1    3[COMMON] PTR struct .
  3773 ;;		 -> mtouch_proximity(18), 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3783 ;;      Params:         0       0       0       0       0       0       0       0
  3784 ;;      Locals:         2       0       0       0       0       0       0       0
  3785 ;;      Temps:          1       0       0       0       0       0       0       0
  3786 ;;      Totals:         3       0       0       0       0       0       0       0
  3787 ;;Total ram usage:        3 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    4
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_MTOUCH_Proximity_InitializeAll
  3794 ;;		_MTOUCH_Proximity_Recalibrate
  3795 ;;		_Proximity_Service
  3796 ;;		_Proximity_State_NotActivated
  3797 ;;		_Proximity_State_Activated
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function _MTOUCH_Proximity_Initialize
  3803  00FD                     _MTOUCH_Proximity_Initialize:	
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _MTOUCH_Proximity_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  3807                           ;MTOUCH_Proximity_Initialize@name stored from wreg
  3808  00FD  00F2               	movwf	MTOUCH_Proximity_Initialize@name
  3809  00FE                     l3162:	
  3810                           
  3811                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 141: void MTOUCH_Proximity_Initialize(en
      +                          um mtouch_proximity_names name);mcc_generated_files/mtouch/mtouch_proximity.c: 142: {;mc
      +                          c_generated_files/mtouch/mtouch_proximity.c: 143:     mtouch_proximity_t* prox = &mtouch
      +                          _proximity[name];
  3812  00FE  0E72               	swapf	MTOUCH_Proximity_Initialize@name,w
  3813  00FF  39F0               	andlw	240
  3814  0100  0772               	addwf	MTOUCH_Proximity_Initialize@name,w
  3815  0101  0772               	addwf	MTOUCH_Proximity_Initialize@name,w
  3816  0102  3E45               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  3817  0103  00F1               	movwf	??_MTOUCH_Proximity_Initialize
  3818  0104  0871               	movf	??_MTOUCH_Proximity_Initialize,w
  3819  0105  00F3               	movwf	MTOUCH_Proximity_Initialize@prox
  3820  0106                     l3164:	
  3821                           
  3822                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 145:     prox->state = MTOUCH_PROXIMITY_
      +                          STATE_initializing;
  3823  0106  0873               	movf	MTOUCH_Proximity_Initialize@prox,w
  3824  0107  3E02               	addlw	2
  3825  0108  0086               	movwf	6
  3826  0109  0187               	clrf	7
  3827  010A  0181               	clrf	1
  3828  010B                     l3166:	
  3829                           
  3830                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 146:     prox->baseline = (mtouch_prox_b
      +                          aseline_t)0;
  3831  010B  0873               	movf	MTOUCH_Proximity_Initialize@prox,w
  3832  010C  3E07               	addlw	7
  3833  010D  0086               	movwf	6
  3834  010E  0187               	clrf	7
  3835  010F  3000               	movlw	0
  3836  0110  3FC0               	movwi [0]fsr1
  3837  0111  3000               	movlw	0
  3838  0112  3FC1               	movwi [1]fsr1
  3839  0113  3FC2               	movwi [2]fsr1
  3840  0114  3FC3               	movwi [3]fsr1
  3841  0115                     l3168:	
  3842                           
  3843                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 147:     prox->counter = (mtouch_prox_st
      +                          atecounter_t)0;
  3844  0115  0873               	movf	MTOUCH_Proximity_Initialize@prox,w
  3845  0116  3E0C               	addlw	12
  3846  0117  0086               	movwf	6
  3847  0118  0187               	clrf	7
  3848  0119  3000               	movlw	0
  3849  011A  3FC0               	movwi [0]fsr1
  3850  011B  3FC1               	movwi [1]fsr1
  3851  011C                     l3170:	
  3852                           
  3853                           ;mcc_generated_files/mtouch/mtouch_proximity.c: 148:     prox->baseline_count = (mtouch_
      +                          prox_baselinecounter_t)0;
  3854  011C  0873               	movf	MTOUCH_Proximity_Initialize@prox,w
  3855  011D  3E0E               	addlw	14
  3856  011E  0086               	movwf	6
  3857  011F  0187               	clrf	7
  3858  0120  3000               	movlw	0
  3859  0121  3FC0               	movwi [0]fsr1
  3860  0122  3FC1               	movwi [1]fsr1
  3861  0123                     l598:	
  3862  0123  0008               	return
  3863  0124                     __end_of_MTOUCH_Proximity_Initialize:	
  3864                           
  3865                           	psect	text18
  3866  02D1                     __ptext18:	
  3867 ;; *************** function _MTOUCH_DataStreamer_Initialize *****************
  3868 ;; Defined at:
  3869 ;;		line 60 in file "mcc_generated_files/mtouch/mtouch_datastreamer.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		None
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3883 ;;      Params:         0       0       0       0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    4
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_MTOUCH_Initialize
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function _MTOUCH_DataStreamer_Initialize
  3899  02D1                     _MTOUCH_DataStreamer_Initialize:	
  3900  02D1                     l844:	
  3901                           ;incstack = 0
  3902                           ; Regs used in _MTOUCH_DataStreamer_Initialize: []
  3903                           
  3904  02D1  0008               	return
  3905  02D2                     __end_of_MTOUCH_DataStreamer_Initialize:	
  3906                           
  3907                           	psect	text19
  3908  0056                     __ptext19:	
  3909 ;; *************** function _EUSART_Initialize *****************
  3910 ;; Defined at:
  3911 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0, pclath, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3925 ;;      Params:         0       0       0       0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0
  3927 ;;      Temps:          1       0       0       0       0       0       0       0
  3928 ;;      Totals:         1       0       0       0       0       0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    5
  3932 ;; This function calls:
  3933 ;;		_EUSART_SetErrorHandler
  3934 ;;		_EUSART_SetFramingErrorHandler
  3935 ;;		_EUSART_SetOverrunErrorHandler
  3936 ;;		_EUSART_SetRxInterruptHandler
  3937 ;;		_EUSART_SetTxInterruptHandler
  3938 ;; This function is called by:
  3939 ;;		_SYSTEM_Initialize
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _EUSART_Initialize
  3945  0056                     _EUSART_Initialize:	
  3946  0056                     l3472:	
  3947                           ;incstack = 0
  3948                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3949                           
  3950                           
  3951                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3952  0056  0021               	movlb	1	; select bank1
  3953  0057  1291               	bcf	17,5	;volatile
  3954  0058                     l3474:	
  3955                           
  3956                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3957  0058  3095               	movlw	low _EUSART_Receive_ISR
  3958  0059  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3959  005A  3000               	movlw	high _EUSART_Receive_ISR
  3960  005B  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3961  005C  3182  22A6  3180   	fcall	_EUSART_SetRxInterruptHandler
  3962  005F                     l3476:	
  3963                           
  3964                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3965  005F  0021               	movlb	1	; select bank1
  3966  0060  1211               	bcf	17,4	;volatile
  3967                           
  3968                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3969  0061  3024               	movlw	low _EUSART_Transmit_ISR
  3970  0062  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3971  0063  3001               	movlw	high _EUSART_Transmit_ISR
  3972  0064  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3973  0065  3182  22A0  3180   	fcall	_EUSART_SetTxInterruptHandler
  3974  0068                     l3478:	
  3975                           
  3976                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3977  0068  3008               	movlw	8
  3978  0069  0023               	movlb	3	; select bank3
  3979  006A  009F               	movwf	31	;volatile
  3980  006B                     l3480:	
  3981                           
  3982                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3983  006B  3090               	movlw	144
  3984  006C  009D               	movwf	29	;volatile
  3985  006D                     l3482:	
  3986                           
  3987                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3988  006D  3024               	movlw	36
  3989  006E  009E               	movwf	30	;volatile
  3990  006F                     l3484:	
  3991                           
  3992                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x67;
  3993  006F  3067               	movlw	103
  3994  0070  009B               	movwf	27	;volatile
  3995  0071                     l3486:	
  3996                           
  3997                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3998  0071  019C               	clrf	28	;volatile
  3999  0072                     l3488:	
  4000                           
  4001                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4002  0072  30D2               	movlw	low _EUSART_DefaultFramingErrorHandler
  4003  0073  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4004  0074  3002               	movlw	high _EUSART_DefaultFramingErrorHandler
  4005  0075  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4006  0076  3182  22B2  3180   	fcall	_EUSART_SetFramingErrorHandler
  4007  0079                     l3490:	
  4008                           
  4009                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4010  0079  30C7               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4011  007A  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4012  007B  3002               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4013  007C  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4014  007D  3182  22AC  3180   	fcall	_EUSART_SetOverrunErrorHandler
  4015  0080                     l3492:	
  4016                           
  4017                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4018  0080  30CB               	movlw	low _EUSART_DefaultErrorHandler
  4019  0081  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  4020  0082  3002               	movlw	high _EUSART_DefaultErrorHandler
  4021  0083  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4022  0084  3182  22B8  3180   	fcall	_EUSART_SetErrorHandler
  4023                           
  4024                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4025  0087  0020               	movlb	0	; select bank0
  4026  0088  01C1               	clrf	_eusartRxLastError	;volatile
  4027                           
  4028                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4029  0089  01C4               	clrf	_eusartTxHead	;volatile
  4030                           
  4031                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4032  008A  01C3               	clrf	_eusartTxTail	;volatile
  4033  008B                     l3494:	
  4034                           
  4035                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4036  008B  3008               	movlw	8
  4037  008C  00F3               	movwf	??_EUSART_Initialize
  4038  008D  0873               	movf	??_EUSART_Initialize,w
  4039  008E  00EF               	movwf	_eusartTxBufferRemaining	;volatile
  4040  008F                     l3496:	
  4041                           
  4042                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4043  008F  01FC               	clrf	_eusartRxHead	;volatile
  4044  0090                     l3498:	
  4045                           
  4046                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4047  0090  01FB               	clrf	_eusartRxTail	;volatile
  4048  0091                     l3500:	
  4049                           
  4050                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4051  0091  01C2               	clrf	_eusartRxCount	;volatile
  4052  0092                     l3502:	
  4053                           
  4054                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4055  0092  0021               	movlb	1	; select bank1
  4056  0093  1691               	bsf	17,5	;volatile
  4057  0094                     l85:	
  4058  0094  0008               	return
  4059  0095                     __end_of_EUSART_Initialize:	
  4060                           
  4061                           	psect	text20
  4062  02A0                     __ptext20:	
  4063 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4064 ;; Defined at:
  4065 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4068 ;;		 -> EUSART_Transmit_ISR(1), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4080 ;;      Params:         2       0       0       0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0
  4083 ;;      Totals:         2       0       0       0       0       0       0       0
  4084 ;;Total ram usage:        2 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    4
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_EUSART_Initialize
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function _EUSART_SetTxInterruptHandler
  4096  02A0                     _EUSART_SetTxInterruptHandler:	
  4097  02A0                     l3232:	
  4098                           ;incstack = 0
  4099                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4100                           
  4101                           
  4102                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4103  02A0  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4104  02A1  0020               	movlb	0	; select bank0
  4105  02A2  00EE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4106  02A3  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4107  02A4  00ED               	movwf	_EUSART_TxDefaultInterruptHandler
  4108  02A5                     l157:	
  4109  02A5  0008               	return
  4110  02A6                     __end_of_EUSART_SetTxInterruptHandler:	
  4111                           
  4112                           	psect	text21
  4113  02A6                     __ptext21:	
  4114 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4115 ;; Defined at:
  4116 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4119 ;;		 -> EUSART_Receive_ISR(1), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4131 ;;      Params:         2       0       0       0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0
  4134 ;;      Totals:         2       0       0       0       0       0       0       0
  4135 ;;Total ram usage:        2 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    4
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_EUSART_Initialize
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function _EUSART_SetRxInterruptHandler
  4147  02A6                     _EUSART_SetRxInterruptHandler:	
  4148  02A6                     l3230:	
  4149                           ;incstack = 0
  4150                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4151                           
  4152                           
  4153                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4154  02A6  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4155  02A7  0021               	movlb	1	; select bank1
  4156  02A8  00BA               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  4157  02A9  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4158  02AA  00B9               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  4159  02AB                     l160:	
  4160  02AB  0008               	return
  4161  02AC                     __end_of_EUSART_SetRxInterruptHandler:	
  4162                           
  4163                           	psect	text22
  4164  02AC                     __ptext22:	
  4165 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4166 ;; Defined at:
  4167 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4170 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4182 ;;      Params:         2       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0
  4185 ;;      Totals:         2       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    4
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_EUSART_Initialize
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function _EUSART_SetOverrunErrorHandler
  4198  02AC                     _EUSART_SetOverrunErrorHandler:	
  4199  02AC                     l3236:	
  4200                           ;incstack = 0
  4201                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4202                           
  4203                           
  4204                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4205  02AC  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4206  02AD  0021               	movlb	1	; select bank1
  4207  02AE  00B6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4208  02AF  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4209  02B0  00B5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4210  02B1                     l151:	
  4211  02B1  0008               	return
  4212  02B2                     __end_of_EUSART_SetOverrunErrorHandler:	
  4213                           
  4214                           	psect	text23
  4215  02B2                     __ptext23:	
  4216 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4217 ;; Defined at:
  4218 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4221 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4233 ;;      Params:         2       0       0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0
  4236 ;;      Totals:         2       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    4
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_EUSART_Initialize
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           
  4248                           ;psect for function _EUSART_SetFramingErrorHandler
  4249  02B2                     _EUSART_SetFramingErrorHandler:	
  4250  02B2                     l3234:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4253                           
  4254                           
  4255                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4256  02B2  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4257  02B3  0021               	movlb	1	; select bank1
  4258  02B4  00B8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4259  02B5  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4260  02B6  00B7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4261  02B7                     l148:	
  4262  02B7  0008               	return
  4263  02B8                     __end_of_EUSART_SetFramingErrorHandler:	
  4264                           
  4265                           	psect	text24
  4266  02B8                     __ptext24:	
  4267 ;; *************** function _EUSART_SetErrorHandler *****************
  4268 ;; Defined at:
  4269 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4272 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4284 ;;      Params:         2       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0
  4287 ;;      Totals:         2       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        2 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    4
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_EUSART_Initialize
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _EUSART_SetErrorHandler
  4300  02B8                     _EUSART_SetErrorHandler:	
  4301  02B8                     l3238:	
  4302                           ;incstack = 0
  4303                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4304                           
  4305                           
  4306                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4307  02B8  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4308  02B9  0021               	movlb	1	; select bank1
  4309  02BA  00B4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4310  02BB  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4311  02BC  00B3               	movwf	_EUSART_ErrorHandler^(0+128)
  4312  02BD                     l154:	
  4313  02BD  0008               	return
  4314  02BE                     __end_of_EUSART_SetErrorHandler:	
  4315                           
  4316                           	psect	intentry
  4317  0004                     __pintentry:	
  4318 ;; *************** function _INTERRUPT_InterruptManager *****************
  4319 ;; Defined at:
  4320 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4334 ;;      Params:         0       0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    3
  4341 ;; This function calls:
  4342 ;;		Absolute function
  4343 ;;		_EUSART_Receive_ISR
  4344 ;;		_EUSART_Transmit_ISR
  4345 ;; This function is called by:
  4346 ;;		Interrupt level 1
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350  0004                     _INTERRUPT_InterruptManager:	
  4351                           
  4352                           ;incstack = 0
  4353  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4354                           
  4355                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4356  0005  3180               	pagesel	$
  4357  0006                     i1l3892:	
  4358                           
  4359                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4360  0006  1F0B               	btfss	11,6	;volatile
  4361  0007  2809               	goto	u325_21
  4362  0008  280A               	goto	u325_20
  4363  0009                     u325_21:	
  4364  0009  282B               	goto	i1l762
  4365  000A                     u325_20:	
  4366  000A                     i1l3894:	
  4367                           
  4368                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4369  000A  0021               	movlb	1	; select bank1
  4370  000B  1E11               	btfss	17,4	;volatile
  4371  000C  280E               	goto	u326_21
  4372  000D  280F               	goto	u326_20
  4373  000E                     u326_21:	
  4374  000E  281A               	goto	i1l757
  4375  000F                     u326_20:	
  4376  000F                     i1l3896:	
  4377  000F  0020               	movlb	0	; select bank0
  4378  0010  1E11               	btfss	17,4	;volatile
  4379  0011  2813               	goto	u327_21
  4380  0012  2814               	goto	u327_20
  4381  0013                     u327_21:	
  4382  0013  281A               	goto	i1l757
  4383  0014                     u327_20:	
  4384  0014                     i1l3898:	
  4385                           
  4386                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  4387  0014  086E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4388  0015  008A               	movwf	10
  4389  0016  086D               	movf	_EUSART_TxDefaultInterruptHandler,w
  4390  0017  000A               	callw
  4391  0018  3180               	pagesel	$
  4392                           
  4393                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4394  0019  282B               	goto	i1l762
  4395  001A                     i1l757:	
  4396                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4397                           
  4398  001A  0021               	movlb	1	; select bank1
  4399  001B  1E91               	btfss	17,5	;volatile
  4400  001C  281E               	goto	u328_21
  4401  001D  281F               	goto	u328_20
  4402  001E                     u328_21:	
  4403  001E  282B               	goto	i1l758
  4404  001F                     u328_20:	
  4405  001F                     i1l3900:	
  4406  001F  0020               	movlb	0	; select bank0
  4407  0020  1E91               	btfss	17,5	;volatile
  4408  0021  2823               	goto	u329_21
  4409  0022  2824               	goto	u329_20
  4410  0023                     u329_21:	
  4411  0023  282B               	goto	i1l758
  4412  0024                     u329_20:	
  4413  0024                     i1l3902:	
  4414                           
  4415                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  4416  0024  0021               	movlb	1	; select bank1
  4417  0025  083A               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  4418  0026  008A               	movwf	10
  4419  0027  0839               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  4420  0028  000A               	callw
  4421  0029  3180               	pagesel	$
  4422                           
  4423                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4424  002A  282B               	goto	i1l762
  4425  002B                     i1l758:	
  4426  002B                     i1l762:	
  4427                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  4428                           
  4429  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4430  002C  0009               	retfie
  4431  002D                     __end_of_INTERRUPT_InterruptManager:	
  4432                           
  4433                           	psect	text26
  4434  0124                     __ptext26:	
  4435 ;; *************** function _EUSART_Transmit_ISR *****************
  4436 ;; Defined at:
  4437 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4451 ;;      Params:         0       0       0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0
  4453 ;;      Temps:          1       0       0       0       0       0       0       0
  4454 ;;      Totals:         1       0       0       0       0       0       0       0
  4455 ;;Total ram usage:        1 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_EUSART_Initialize
  4461 ;;		_INTERRUPT_InterruptManager
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function _EUSART_Transmit_ISR
  4467  0124                     _EUSART_Transmit_ISR:	
  4468  0124                     i1l3660:	
  4469                           ;incstack = 0
  4470                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4471                           
  4472                           
  4473                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4474  0124  3008               	movlw	8
  4475  0125  0020               	movlb	0	; select bank0
  4476  0126  026F               	subwf	_eusartTxBufferRemaining,w	;volatile
  4477  0127  1803               	skipnc
  4478  0128  292A               	goto	u299_21
  4479  0129  292B               	goto	u299_20
  4480  012A                     u299_21:	
  4481  012A  2943               	goto	i1l122
  4482  012B                     u299_20:	
  4483  012B                     i1l3662:	
  4484                           
  4485                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  4486  012B  0843               	movf	_eusartTxTail,w
  4487  012C  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4488  012D  0086               	movwf	6
  4489  012E  0187               	clrf	7
  4490  012F  0801               	movf	1,w
  4491  0130  0023               	movlb	3	; select bank3
  4492  0131  009A               	movwf	26	;volatile
  4493  0132                     i1l3664:	
  4494  0132  3001               	movlw	1
  4495  0133  00F0               	movwf	??_EUSART_Transmit_ISR
  4496  0134  0870               	movf	??_EUSART_Transmit_ISR,w
  4497  0135  0020               	movlb	0	; select bank0
  4498  0136  07C3               	addwf	_eusartTxTail,f	;volatile
  4499  0137                     i1l3666:	
  4500                           
  4501                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4502  0137  3008               	movlw	8
  4503  0138  0243               	subwf	_eusartTxTail,w	;volatile
  4504  0139  1C03               	skipc
  4505  013A  293C               	goto	u300_21
  4506  013B  293D               	goto	u300_20
  4507  013C                     u300_21:	
  4508  013C  293E               	goto	i1l3670
  4509  013D                     u300_20:	
  4510  013D                     i1l3668:	
  4511                           
  4512                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  4513  013D  01C3               	clrf	_eusartTxTail	;volatile
  4514  013E                     i1l3670:	
  4515                           
  4516                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  4517  013E  3001               	movlw	1
  4518  013F  00F0               	movwf	??_EUSART_Transmit_ISR
  4519  0140  0870               	movf	??_EUSART_Transmit_ISR,w
  4520  0141  07EF               	addwf	_eusartTxBufferRemaining,f	;volatile
  4521                           
  4522                           ;mcc_generated_files/eusart.c: 218:     }
  4523  0142  2945               	goto	i1l125
  4524  0143                     i1l122:	
  4525                           ;mcc_generated_files/eusart.c: 219:     else
  4526                           
  4527                           
  4528                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  4529  0143  0021               	movlb	1	; select bank1
  4530  0144  1211               	bcf	17,4	;volatile
  4531  0145                     i1l125:	
  4532  0145  0008               	return
  4533  0146                     __end_of_EUSART_Transmit_ISR:	
  4534                           
  4535                           	psect	text27
  4536  0095                     __ptext27:	
  4537 ;; *************** function _EUSART_Receive_ISR *****************
  4538 ;; Defined at:
  4539 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4553 ;;      Params:         0       0       0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    2
  4560 ;; This function calls:
  4561 ;;		Absolute function
  4562 ;;		_EUSART_DefaultErrorHandler
  4563 ;;		_EUSART_DefaultFramingErrorHandler
  4564 ;;		_EUSART_DefaultOverrunErrorHandler
  4565 ;;		_EUSART_RxDataHandler
  4566 ;; This function is called by:
  4567 ;;		_EUSART_Initialize
  4568 ;;		_INTERRUPT_InterruptManager
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _EUSART_Receive_ISR
  4574  0095                     _EUSART_Receive_ISR:	
  4575  0095                     i1l3672:	
  4576                           ;incstack = 0
  4577                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4578                           
  4579                           
  4580                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4581  0095  087C               	movf	_eusartRxHead,w	;volatile
  4582  0096  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4583  0097  0086               	movwf	6
  4584  0098  0187               	clrf	7
  4585  0099  0181               	clrf	1
  4586  009A                     i1l3674:	
  4587                           
  4588                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  4589  009A  0023               	movlb	3	; select bank3
  4590  009B  1D1D               	btfss	29,2	;volatile
  4591  009C  289E               	goto	u301_21
  4592  009D  289F               	goto	u301_20
  4593  009E                     u301_21:	
  4594  009E  28AA               	goto	i1l3680
  4595  009F                     u301_20:	
  4596  009F                     i1l3676:	
  4597                           
  4598                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4599  009F  087C               	movf	_eusartRxHead,w	;volatile
  4600  00A0  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4601  00A1  0086               	movwf	6
  4602  00A2  0187               	clrf	7
  4603  00A3  1481               	bsf	1,1
  4604  00A4                     i1l3678:	
  4605                           
  4606                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  4607  00A4  0021               	movlb	1	; select bank1
  4608  00A5  0838               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  4609  00A6  008A               	movwf	10
  4610  00A7  0837               	movf	_EUSART_FramingErrorHandler^(0+128),w
  4611  00A8  000A               	callw
  4612  00A9  3180               	pagesel	$
  4613  00AA                     i1l3680:	
  4614                           
  4615                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  4616  00AA  0023               	movlb	3	; select bank3
  4617  00AB  1C9D               	btfss	29,1	;volatile
  4618  00AC  28AE               	goto	u302_21
  4619  00AD  28AF               	goto	u302_20
  4620  00AE                     u302_21:	
  4621  00AE  28BA               	goto	i1l3686
  4622  00AF                     u302_20:	
  4623  00AF                     i1l3682:	
  4624                           
  4625                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4626  00AF  087C               	movf	_eusartRxHead,w	;volatile
  4627  00B0  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4628  00B1  0086               	movwf	6
  4629  00B2  0187               	clrf	7
  4630  00B3  1501               	bsf	1,2
  4631  00B4                     i1l3684:	
  4632                           
  4633                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  4634  00B4  0021               	movlb	1	; select bank1
  4635  00B5  0836               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  4636  00B6  008A               	movwf	10
  4637  00B7  0835               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  4638  00B8  000A               	callw
  4639  00B9  3180               	pagesel	$
  4640  00BA                     i1l3686:	
  4641                           
  4642                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  4643  00BA  087C               	movf	_eusartRxHead,w	;volatile
  4644  00BB  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4645  00BC  0086               	movwf	6
  4646  00BD  0187               	clrf	7
  4647  00BE  0801               	movf	1,w
  4648  00BF  1903               	btfsc	3,2
  4649  00C0  28C2               	goto	u303_21
  4650  00C1  28C3               	goto	u303_20
  4651  00C2                     u303_21:	
  4652  00C2  28CA               	goto	i1l3690
  4653  00C3                     u303_20:	
  4654  00C3                     i1l3688:	
  4655                           
  4656                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  4657  00C3  0021               	movlb	1	; select bank1
  4658  00C4  0834               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  4659  00C5  008A               	movwf	10
  4660  00C6  0833               	movf	_EUSART_ErrorHandler^(0+128),w
  4661  00C7  000A               	callw
  4662  00C8  3180               	pagesel	$
  4663                           
  4664                           ;mcc_generated_files/eusart.c: 242:     } else {
  4665  00C9  28CD               	goto	i1l132
  4666  00CA                     i1l3690:	
  4667                           
  4668                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  4669  00CA  3181  217E  3180   	fcall	_EUSART_RxDataHandler
  4670  00CD                     i1l132:	
  4671  00CD  0008               	return
  4672  00CE                     __end_of_EUSART_Receive_ISR:	
  4673                           
  4674                           	psect	text28
  4675  02C7                     __ptext28:	
  4676 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4677 ;; Defined at:
  4678 ;;		line 261 in file "mcc_generated_files/eusart.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		None
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4692 ;;      Params:         0       0       0       0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0       0       0
  4695 ;;      Totals:         0       0       0       0       0       0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_EUSART_Initialize
  4702 ;;		_EUSART_Receive_ISR
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4708  02C7                     _EUSART_DefaultOverrunErrorHandler:	
  4709  02C7                     i1l3504:	
  4710                           ;incstack = 0
  4711                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4712                           
  4713                           
  4714                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  4715  02C7  0023               	movlb	3	; select bank3
  4716  02C8  121D               	bcf	29,4	;volatile
  4717                           
  4718                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  4719  02C9  161D               	bsf	29,4	;volatile
  4720  02CA                     i1l142:	
  4721  02CA  0008               	return
  4722  02CB                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  4723                           
  4724                           	psect	text29
  4725  02D2                     __ptext29:	
  4726 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4727 ;; Defined at:
  4728 ;;		line 259 in file "mcc_generated_files/eusart.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		None
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4742 ;;      Params:         0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_EUSART_Initialize
  4752 ;;		_EUSART_Receive_ISR
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4758  02D2                     _EUSART_DefaultFramingErrorHandler:	
  4759  02D2                     i1l139:	
  4760                           ;incstack = 0
  4761                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4762                           
  4763  02D2  0008               	return
  4764  02D3                     __end_of_EUSART_DefaultFramingErrorHandler:	
  4765                           
  4766                           	psect	text30
  4767  02CB                     __ptext30:	
  4768 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4769 ;; Defined at:
  4770 ;;		line 269 in file "mcc_generated_files/eusart.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4784 ;;      Params:         0       0       0       0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    1
  4791 ;; This function calls:
  4792 ;;		_EUSART_RxDataHandler
  4793 ;; This function is called by:
  4794 ;;		_EUSART_Initialize
  4795 ;;		_EUSART_Receive_ISR
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function _EUSART_DefaultErrorHandler
  4801  02CB                     _EUSART_DefaultErrorHandler:	
  4802  02CB                     i1l3506:	
  4803                           ;incstack = 0
  4804                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4805                           
  4806                           
  4807                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  4808  02CB  3181  217E  3182   	fcall	_EUSART_RxDataHandler
  4809  02CE                     i1l145:	
  4810  02CE  0008               	return
  4811  02CF                     __end_of_EUSART_DefaultErrorHandler:	
  4812                           
  4813                           	psect	text31
  4814  017E                     __ptext31:	
  4815 ;; *************** function _EUSART_RxDataHandler *****************
  4816 ;; Defined at:
  4817 ;;		line 249 in file "mcc_generated_files/eusart.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4831 ;;      Params:         0       0       0       0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0
  4833 ;;      Temps:          1       0       0       0       0       0       0       0
  4834 ;;      Totals:         1       0       0       0       0       0       0       0
  4835 ;;Total ram usage:        1 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_EUSART_Receive_ISR
  4841 ;;		_EUSART_DefaultErrorHandler
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _EUSART_RxDataHandler
  4847  017E                     _EUSART_RxDataHandler:	
  4848  017E                     i1l3258:	
  4849                           ;incstack = 0
  4850                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4851                           
  4852                           
  4853                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  4854  017E  0023               	movlb	3	; select bank3
  4855  017F  0819               	movf	25,w	;volatile
  4856  0180  00F0               	movwf	??_EUSART_RxDataHandler
  4857  0181  087C               	movf	_eusartRxHead,w
  4858  0182  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4859  0183  0086               	movwf	6
  4860  0184  0187               	clrf	7
  4861  0185  0870               	movf	??_EUSART_RxDataHandler,w
  4862  0186  0081               	movwf	1
  4863  0187                     i1l3260:	
  4864  0187  3001               	movlw	1
  4865  0188  00F0               	movwf	??_EUSART_RxDataHandler
  4866  0189  0870               	movf	??_EUSART_RxDataHandler,w
  4867  018A  07FC               	addwf	_eusartRxHead,f	;volatile
  4868  018B                     i1l3262:	
  4869                           
  4870                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4871  018B  3008               	movlw	8
  4872  018C  027C               	subwf	_eusartRxHead,w	;volatile
  4873  018D  1C03               	skipc
  4874  018E  2990               	goto	u244_21
  4875  018F  2991               	goto	u244_20
  4876  0190                     u244_21:	
  4877  0190  2992               	goto	i1l3266
  4878  0191                     u244_20:	
  4879  0191                     i1l3264:	
  4880                           
  4881                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  4882  0191  01FC               	clrf	_eusartRxHead	;volatile
  4883  0192                     i1l3266:	
  4884                           
  4885                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  4886  0192  3001               	movlw	1
  4887  0193  00F0               	movwf	??_EUSART_RxDataHandler
  4888  0194  0870               	movf	??_EUSART_RxDataHandler,w
  4889  0195  0020               	movlb	0	; select bank0
  4890  0196  07C2               	addwf	_eusartRxCount,f	;volatile
  4891  0197                     i1l136:	
  4892  0197  0008               	return
  4893  0198                     __end_of_EUSART_RxDataHandler:	
  4894  007E                     btemp	set	126	;btemp
  4895  007E                     int$flags	set	126
  4896  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    25
    Data        41
    BSS         58
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0      80
    BANK1            80      5      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Proximity_Service$2215$0	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK0[18]), 

    Proximity_StateMachine$0	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK0[18]), 

    memcpy@d1	PTR void  size(1) Largest target is 18
		 -> mtouch_proximity(BANK0[18]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 18
		 -> mtouch_proximity(BANK0[18]), 

    memcpy@s1	PTR const void  size(2) Largest target is 18
		 -> mtouch_proximity_init(CODE[18]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 18
		 -> mtouch_proximity_init(CODE[18]), 

    sp__memcpy	PTR void  size(1) Largest target is 18
		 -> mtouch_proximity(BANK0[18]), 

    MTOUCH_Proximity_Initialize@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK0[18]), 

    Proximity_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Proximity_State_Activated(), Proximity_State_NotActivated(), Proximity_State_Initializing(), 

    callback_notActivated	PTR FTN(enum E3067,)void  size(2) Largest target is 1
		 -> Proximity_DefaultCallback(), 

    callback_activated	PTR FTN(enum E3067,)void  size(2) Largest target is 1
		 -> Proximity_DefaultCallback(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    S296$sensor_adc2	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sensor_scan_group.sensor_adc2	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S296$sensor_adc1	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    sensor_scan_group.sensor_adc1	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    callback_sampled	PTR FTN(enum E2854,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Calibrate
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Sensor_Calibrate->___bmul
    _MTOUCH_Proximity_InitializeAll->_memcpy
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _MTOUCH_Proximity_InitializeAll->_memcpy

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3629
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    3629
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    3139
     _MTOUCH_DataStreamer_Initialize
     _MTOUCH_Proximity_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     202
                                              2 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    2402
                                              9 COMMON     1     1      0
                                              0 BANK1      1     1      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             2     2      0    2303
                                              7 COMMON     2     2      0
            _MTOUCH_Sensor_Calibrate
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0     103
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 2     2      0     723
                                              5 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              2     2      0     723
                                              5 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     661
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Proximity_InitializeAll                       0     0      0     535
        _MTOUCH_Proximity_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     424
                                              1 COMMON     5     1      4
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Proximity_Initialize                          3     3      0     111
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_DataStreamer_Initialize                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _MTOUCH_Initialize
       _MTOUCH_DataStreamer_Initialize
       _MTOUCH_Proximity_InitializeAll
         _MTOUCH_Proximity_Initialize
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Calibrate
             ___bmul
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5      20       8       40.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      7D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 05 00:39:25 2019

                       ?_EUSART_SetRxInterruptHandler 0071                                        ___bmul@product 0073  
                                         __CFG_CP$OFF 0000                                                    l85 0094  
                                         __CFG_LVP$ON 0000                                                   l151 02B1  
                                                 l160 02AB                                                   l154 02BD  
                                                 l148 02B7                                                   l157 02A5  
                                                 l520 0287                                                   l514 0163  
                                                 l284 0247                                                   l606 0258  
                                                 l279 01C3                                                   l287 0278  
                                                 l464 0211                                                   l492 0224  
                                                 l818 017D                                                   l931 0268  
                                                 l844 02D1                                                   l598 0123  
                                                 l783 01FE                                                   l786 029F  
                                                 l882 0280                                                   l866 0297  
                                                 l867 0297                                                   l789 02C6  
                                                 _GIE 005F                                                   _PR2 001B  
                              ??_EUSART_RxDataHandler 0070                        ?_EUSART_SetFramingErrorHandler 0071  
                                     _TMR2_Initialize 0279                                          __CFG_BORV$LO 0000  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0072  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0070                     __size_of_MTOUCH_Sensor_Initialize 0016  
                           ?_MTOUCH_Sensor_Initialize 0070                                                  l1037 01D8  
                                                l4000 00EC                                                  l2400 027E  
                                                l4002 00F0                                                  l3230 02A6  
                                                l4022 0239                                                  l3232 02A0  
                                                l4024 023D                                                  l4016 0237  
                                                l4040 0146                                                  l4120 025F  
                                                l3234 02B2                                                  l3170 011C  
                                                l3162 00FE                                                  l1474 00FC  
                                                l4026 0242                                                  l4122 0262  
                                                l4130 01FB                                                  l3236 02AC  
                                                l3500 0091                                                  l3164 0106  
                                                l4044 0153                                                  l4124 0265  
                                                l4116 0259                                                  l2380 016F  
                                                l2372 0164                                                  l3238 02B8  
                                                l3502 0092                                                  l3166 010B  
                                                l4054 0248                                                  l4046 0157  
                                                l4118 025C                                                  l2390 029D  
                                                l2382 0172                                                  l2374 0168  
                                                l3168 0115                                                  l4056 0254  
                                                l4048 015B                                                  l3280 0269  
                                                l2384 0174                                                  l2376 016B  
                                                l2392 02C3                                                  l4128 01EC  
                                                l3290 0275                                                  l3282 026C  
                                                l2386 0179                                                  l2378 016D  
                                                l2394 0279                                                  l3284 026E  
                                                l2388 029A                                                  l2396 027C  
                                                l3286 0270                                                  l2398 027D  
                                                l4262 0294                                                  l3480 006B  
                                                l3472 0056                                                  l3288 0273  
                                                l3490 0079                                                  l3482 006D  
                                                l3474 0058                                                  l3492 0080  
                                                l3484 006F                                                  l3476 005F  
                                                l3494 008B                                                  l3486 0071  
                                                l3478 0068                                                  l3496 008F  
                                                l3488 0072                                                  l3498 0090  
                                                l3960 01D0                                                  l3952 01C5  
                                                l3962 01D7                                                  l3954 01C6  
                                                l3970 0213                                                  l3956 01CA  
                                                l3972 0218                                                  l3958 01CE  
                                                l3966 0200                                                  l3974 0282  
                                                l3992 00D0                                                  l3968 0205  
                                                l3994 00D9                                                  l3996 00E1  
                                                l3988 01AF                                                  l3998 00E5  
                                                _LATA 010C                                                  _LATB 010D  
                                                _LATC 010E                                                  u3400 01D7  
                                                u3401 01D6                                                  u3410 0205  
                                                u3411 0204                                                  u3420 0218  
                                                u3500 0152                                                  u3421 0217  
                                                u3501 0151                                                  u3510 0163  
                                                u3511 0162                                                  u3440 00FC  
                                                u3441 00FB                                                  u3390 01CA  
                                                u3391 01C9                                                  u3480 0247  
                                                u3481 0246                                                  _TMR2 001A  
                                                _WPUA 020C                                                  _WPUB 020D  
                                        __CFG_WRT$OFF 0000                                                  _data 00A0  
                                                _main 0294                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                  __size_of_MTOUCH_Sensor_InitializeAll 0011  
                                                btemp 007E                                                  start 002D  
                                   ___bmul@multiplier 0074                                         __CFG_MCLRE$ON 0000  
__end_ofSensor_Scanfrequency_Evaluation@frequency_hop 02C3          Sensor_Scanfrequency_Evaluation@frequency_hop 02BE  
                      __size_of_OSCILLATOR_Initialize 0006                         __end_of_OSCILLATOR_Initialize 02A0  
                                               ?_main 0070                                         __CFG_WDTE$OFF 0000  
                                               _T2CON 001C                                                 i1l122 0143  
                                               i1l132 00CD                                                 i1l125 0145  
                                               i1l142 02CA                                                 i1l136 0197  
                                               i1l145 02CE                                                 i1l139 02D2  
                                               i1l762 002B                                                 i1l757 001A  
                                               i1l758 002B                                                 _RCREG 0199  
                                               _RCSTA 019D                                                 _TRISA 008C  
                                               _TRISB 008D                                                 _TRISC 008E  
                                               _TXREG 019A                                                 _TXSTA 019E  
               __end_of_MTOUCH_Sensor_Scan_Initialize 0279                __size_of_MTOUCH_Sensor_Scan_Initialize 0010  
                       _MTOUCH_Sensor_Scan_Initialize 0269                                        _WDT_Initialize 02C3  
                                               pclath 000A                                  _Sensor_Sampled_Reset 0281  
                                               status 0003                                                 wtemp0 007E  
                                     __initialization 002F                                          __end_of_main 029A  
                             __end_of_TMR2_Initialize 0281                                        __CFG_LPBOR$OFF 0000  
                         ?_INTERRUPT_InterruptManager 0070                        ??_EUSART_SetRxInterruptHandler 0073  
                                              ??_main 007A                             _Proximity_State_Activated 0000  
                             _MTOUCH_Sensor_Calibrate 0212                  MTOUCH_Sensor_Sampled_ResetAll@sensor 0073  
                              __end_of_WDT_Initialize 02C7                         __end_of_mtouch_proximity_init 0237  
           __end_of_EUSART_DefaultFramingErrorHandler 02D3            __size_of_EUSART_DefaultFramingErrorHandler 0001  
                 ??_EUSART_DefaultFramingErrorHandler 0070                    ?_EUSART_DefaultFramingErrorHandler 0070  
                   _EUSART_DefaultFramingErrorHandler 02D2                            _EUSART_OverrunErrorHandler 00B5  
                                              _APFCON 011D                                                _ANSELA 018C  
                                              _ANSELB 018D                                                _ANSELC 018E  
                                              _BORCON 0116                                                i1l3260 0187  
                                              i1l3262 018B                                                i1l3264 0191  
                                              i1l3504 02C7                                                i1l3266 0192  
                                              i1l3258 017E                                                i1l3506 02CB  
                                              i1l3660 0124                                                i1l3900 001F  
                                              i1l3670 013E                                                i1l3662 012B  
                                              i1l3902 0024                                                i1l3680 00AA  
                                              i1l3672 0095                                                u300_20 013D  
                                              i1l3664 0132                                                u300_21 013C  
                                              i1l3690 00CA                                                i1l3682 00AF  
                                              i1l3674 009A                                                i1l3666 0137  
                                              i1l3684 00B4                                                i1l3676 009F  
                                              i1l3668 013D                                                i1l3686 00BA  
                                              i1l3678 00A4                                                i1l3688 00C3  
                                              u301_20 009F                                                u301_21 009E  
                                              i1l3892 0006                                                i1l3894 000A  
                                              u302_20 00AF                                                i1l3896 000F  
                                              u302_21 00AE                                                i1l3898 0014  
                                              u303_20 00C3                                                u303_21 00C2  
                               ?_Sensor_Sampled_Reset 0070                                                u244_20 0191  
                                              u244_21 0190                                                u325_20 000A  
                                              u325_21 0009                                                u326_20 000F  
                                              u326_21 000E                                                u327_20 0014  
                                              u327_21 0013                                                u328_20 001F  
                                              u328_21 001E                                                u329_20 0024  
                                              u329_21 0023                                                _OSCCON 0099  
                                              u299_20 012B                                                u299_21 012A  
                                              _SPBRGH 019C                                                _SPBRGL 019B  
                                              _WDTCON 0097                                        __CFG_PWRTE$OFF 0000  
                              _Sensor_DefaultCallback 0000                                         _packet_sample 0038  
                                    _mtouch_proximity 0045                                                ___bmul 01C4  
                                      __CFG_STVREN$ON 0000                                   _EUSART_Transmit_ISR 0124  
                                              _memcpy 00CE                                       ?_WDT_Initialize 0070  
                                ?_EUSART_Transmit_ISR 0070                                     _SYSTEM_Initialize 01EC  
                             __end_of__initialization 0052                       MTOUCH_Proximity_Initialize@name 0072  
                      ?_MTOUCH_Sensor_Scan_Initialize 0070                       MTOUCH_Proximity_Initialize@prox 0073  
                                  ?_SYSTEM_Initialize 0070                         MTOUCH_Sensor_Calibrate@sensor 0076  
                __end_of_EUSART_SetTxInterruptHandler 02A6                 __size_of_EUSART_SetTxInterruptHandler 0006  
                        _EUSART_SetTxInterruptHandler 02A0                                   ___bmul@multiplicand 0071  
                           _Proximity_DefaultCallback 0000                __end_of_MTOUCH_Proximity_InitializeAll 0259  
             __size_of_MTOUCH_Proximity_InitializeAll 0011                        _MTOUCH_Proximity_InitializeAll 0248  
                                      __pcstackCOMMON 0070                                          __pidataBANK0 0198  
                                        __pidataBANK1 01D9                                   ??_SYSTEM_Initialize 007A  
                    __end_of_MTOUCH_Sensor_Initialize 01C4                             ??_MTOUCH_Sensor_Calibrate 0075  
                                    ?_TMR2_Initialize 0070                                        _OPTION_REGbits 0095  
                                _eusartRxStatusBuffer 0020                       ??_EUSART_SetOverrunErrorHandler 0073  
                       __size_of_MTOUCH_Sensor_Enable 0013                                     _sensor_scan_group 02CF  
                           __end_of_SYSTEM_Initialize 01FF                                     _lowpowerActivated 0040  
                               ??_EUSART_Transmit_ISR 0070                                ??_Sensor_Sampled_Reset 0071  
                                          __pbssBANK0 0020                           __size_of_EUSART_Receive_ISR 0039  
                                          __pmaintext 0294                                               ?___bmul 0071  
                       ?_EUSART_SetTxInterruptHandler 0071                      _EUSART_TxDefaultInterruptHandler 006D  
                                             _AD1CON0 0711                                               _AD1CON2 0713  
                                             _AD1CON3 0714                                               _AD2CON0 0791  
                                             _AD2CON2 0793                                               _AD2CON3 0794  
                                             _AAD1CAP 0719                                               _AAD1GRD 0718  
                                             _AAD2GRD 0798                                            __pintentry 0004  
                                             ?_memcpy 0071                                               _BAUDCON 019F  
                                           _AD1ACQCON 0717                                             _AD2ACQCON 0797  
                        ?_MTOUCH_Proximity_Initialize 0070                          ??_EUSART_DefaultErrorHandler 0071  
                 __end_of_MTOUCH_Sensor_InitializeAll 0248                           _MTOUCH_Sensor_InitializeAll 0237  
                                       _eusartRxCount 0042                                             _AD1PRECON 0716  
                                           _AD2PRECON 0796                             __end_of_sensor_scan_group 02D1  
                       __size_of_EUSART_RxDataHandler 001A                              ??_EUSART_SetErrorHandler 0073  
                 __size_of_EUSART_DefaultErrorHandler 0004                                       __size_of___bmul 0015  
                        _Proximity_State_Initializing 0000                                           _AD1CON0bits 0711  
                                         _AD2CON0bits 0791                                       __size_of_memcpy 002F  
                                             __ptext1 01EC                                               __ptext2 02C3  
                                             __ptext3 0279                                               __ptext4 0164  
                                             __ptext5 029A                                               __ptext6 0259  
                                             __ptext7 0269                                               __ptext8 0146  
                                             __ptext9 0237                         ??_MTOUCH_Proximity_Initialize 0071  
                            _MTOUCH_Sensor_Initialize 01AE                                 _OSCILLATOR_Initialize 029A  
                                           _T2CONbits 001C                              ??_PIN_MANAGER_Initialize 0071  
                   MTOUCH_Sensor_InitializeAll@sensor 00BB                                      _callback_sampled 0061  
                          __size_of_SYSTEM_Initialize 0013                                               clrloop0 028F  
                      MTOUCH_Sensor_Initialize@sensor 0078                                  end_of_initialization 0052  
               __end_of_EUSART_SetOverrunErrorHandler 02B2                __size_of_EUSART_SetOverrunErrorHandler 0006  
                       _EUSART_SetOverrunErrorHandler 02AC                                               memcpy@d 00BF  
                                             memcpy@n 0073                                               memcpy@s 00BC  
                                             init_ram 0288                                               initloop 0289  
                                   _EUSART_Initialize 0056                                    ?_EUSART_Initialize 0070  
                                           _RCSTAbits 019D                          _Proximity_State_NotActivated 0000  
                                 ??_EUSART_Initialize 0073                                      ??_WDT_Initialize 0071  
                      ??_EUSART_SetTxInterruptHandler 0073                                      __CFG_FOSC$INTOSC 0000  
                          MTOUCH_Sensor_Enable@sensor 0076                                 _mtouch_proximity_init 0225  
                     __size_of_EUSART_SetErrorHandler 0006                                    _sensor_globalFlags 007A  
                __size_of_MTOUCH_Proximity_Initialize 0027                             __end_of_EUSART_Initialize 0095  
                                           _TXSTAbits 019E                                        __end_of___bmul 01D9  
                  __end_of_EUSART_DefaultErrorHandler 02CF                            _EUSART_DefaultErrorHandler 02CB  
                     ??_MTOUCH_Sensor_Scan_Initialize 0071                                        __end_of_memcpy 00FD  
                              ?_OSCILLATOR_Initialize 0070                                   start_initialization 002F  
                    ??_MTOUCH_Proximity_InitializeAll 0076                       ?_MTOUCH_Proximity_InitializeAll 0070  
                              _Proximity_StateMachine 0057                       __size_of_PIN_MANAGER_Initialize 001A  
        EUSART_SetRxInterruptHandler@interruptHandler 0071          EUSART_SetTxInterruptHandler@interruptHandler 0071  
                      ?_EUSART_SetOverrunErrorHandler 0071                          __end_of_MTOUCH_Sensor_Enable 0212  
                                        _packet_noise 003C                            _EUSART_FramingErrorHandler 00B7  
                                            ??___bmul 0072                                _EUSART_SetErrorHandler 02B8  
                                         __pdataBANK0 0057                                           __pdataBANK1 00A0  
                                            ??_memcpy 0075                                         _sample_period 0063  
              __end_of_MTOUCH_DataStreamer_Initialize 02D2               __size_of_MTOUCH_DataStreamer_Initialize 0001  
                      _MTOUCH_DataStreamer_Initialize 02D1                            Sensor_Sampled_Reset@sensor 0071  
                         __end_of_EUSART_Transmit_ISR 0146                                           __pbssCOMMON 007A  
                                           ___latbits 0002                                         __pcstackBANK1 00BB  
                            __size_of_TMR2_Initialize 0008                            __end_of_EUSART_Receive_ISR 00CE  
                       __size_of_Sensor_Sampled_Reset 0007                            __size_of_EUSART_Initialize 003F  
                    _EUSART_RxDefaultInterruptHandler 00B9                                             __pnvBANK0 006D  
                                           __pnvBANK1 00B3                          __end_of_EUSART_RxDataHandler 0198  
                              _PIN_MANAGER_Initialize 0164                              ?_MTOUCH_Sensor_Calibrate 0070  
                          ??_MTOUCH_Sensor_Initialize 0077                                              _AAD1CON2 0713  
                                            _AAD1CON3 0714                                              _AAD2CON3 0794  
                                            _AAD1RES0 071A                                          _eusartRxHead 007C  
                                            _AAD2RES0 079A                                          _eusartTxHead 0044  
                                        _eusartRxTail 007B                                          _eusartTxTail 0043  
                        ??_INTERRUPT_InterruptManager 0071                                    _callback_activated 005F  
                                            _ADCOMCON 0712                               _eusartTxBufferRemaining 006F  
                                      _eusartRxBuffer 0028                                        _eusartTxBuffer 0030  
              EUSART_SetErrorHandler@interruptHandler 0071                                             clear_ram0 028E  
                                            _PIE1bits 0091                                     _eusartRxLastError 0041  
                 __size_of_INTERRUPT_InterruptManager 0029                                              _PIR1bits 0011  
                     ??_EUSART_SetFramingErrorHandler 0073                                              _PIR2bits 0012  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 0164               __size_of_MTOUCH_Sensor_Sampled_ResetAll 001E  
                      _MTOUCH_Sensor_Sampled_ResetAll 0146             __end_of_EUSART_DefaultOverrunErrorHandler 02CB  
          __size_of_EUSART_DefaultOverrunErrorHandler 0004                   ??_EUSART_DefaultOverrunErrorHandler 0070  
                  ?_EUSART_DefaultOverrunErrorHandler 0070                     _EUSART_DefaultOverrunErrorHandler 02C7  
                                  _mtouch_time_toScan 003E                                  _MTOUCH_Sensor_Enable 01FF  
                                   ??_TMR2_Initialize 0071                                     _MTOUCH_Initialize 0259  
                     __end_of_MTOUCH_Sensor_Calibrate 0225                                    ?_MTOUCH_Initialize 0070  
                                           memcpy@tmp 00BB                                            _APFCONbits 011D  
                             ??_OSCILLATOR_Initialize 0071                                   _EUSART_ErrorHandler 00B3  
                                 ??_MTOUCH_Initialize 007A                   __end_of_MTOUCH_Proximity_Initialize 0124  
                         _MTOUCH_Proximity_Initialize 00FD                           ?_EUSART_DefaultErrorHandler 0070  
                                _EUSART_RxDataHandler 017E                                 ?_MTOUCH_Sensor_Enable 0070  
                                            __ptext10 01AE                                              __ptext11 0281  
                                            __ptext20 02A0                                              __ptext12 01FF  
                                            __ptext21 02A6                                              __ptext13 0212  
                                            __ptext30 02CB                                              __ptext22 02AC  
                                            __ptext14 01C4                                              __ptext31 017E  
                                            __ptext23 02B2                                              __ptext15 0248  
                                            __ptext24 02B8                                              __ptext16 00CE  
                                            __ptext17 00FD                                              __ptext26 0124  
                                            __ptext18 02D1                                              __ptext27 0095  
                                            __ptext19 0056                                              __ptext28 02C7  
                                            __ptext29 02D2                             __end_of_MTOUCH_Initialize 0269  
                                       __size_of_main 0006                               ?_EUSART_SetErrorHandler 0071  
                 MTOUCH_DataStreamer_Service@sequence 003F         EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                            int$flags 007E                    __end_of_INTERRUPT_InterruptManager 002D  
                          _INTERRUPT_InterruptManager 0004                 __end_of_EUSART_SetFramingErrorHandler 02B8  
              __size_of_EUSART_SetFramingErrorHandler 0006                         _EUSART_SetFramingErrorHandler 02B2  
                        ?_MTOUCH_Sensor_InitializeAll 0070                                            _INTCONbits 000B  
                               ?_EUSART_RxDataHandler 0070                                         _mtouch_sensor 0064  
                                            memcpy@d1 00BE                                              memcpy@s1 0071  
                                   __CFG_BOREN$NSLEEP 0000                               __size_of_WDT_Initialize 0004  
                                            intlevel1 0000                      ??_MTOUCH_DataStreamer_Initialize 0071  
                     ?_MTOUCH_DataStreamer_Initialize 0070                               ?_PIN_MANAGER_Initialize 0070  
                      __end_of_EUSART_SetErrorHandler 02BE                                     __CFG_CLKOUTEN$OFF 0000  
                __end_of_EUSART_SetRxInterruptHandler 02AC                 __size_of_EUSART_SetRxInterruptHandler 0006  
                        _EUSART_SetRxInterruptHandler 02A6                                    _EUSART_Receive_ISR 0095  
       EUSART_SetFramingErrorHandler@interruptHandler 0071                          __end_of_Sensor_Sampled_Reset 0288  
                               _callback_notActivated 005D                                         __pstringtext1 02BE  
                                       __pstringtext2 02CF                                         __pstringtext3 0225  
                                 ?_EUSART_Receive_ISR 0070                         ??_MTOUCH_Sensor_InitializeAll 0079  
                    __size_of_MTOUCH_Sensor_Calibrate 0013                                ??_MTOUCH_Sensor_Enable 0075  
                        __size_of_EUSART_Transmit_ISR 0022                            __size_of_MTOUCH_Initialize 0010  
                      __end_of_PIN_MANAGER_Initialize 017E                                  ??_EUSART_Receive_ISR 0071  
